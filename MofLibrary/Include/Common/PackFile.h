/*************************************************************************//*!
					
					@file	PackFile.h
					@brief	ファイルパッキングクラス

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/


//ONCE
#ifndef		__PACKFILE__H__

#define		__PACKFILE__H__

//INCLUDE
#include	"ReadFile.h"
#include	"WriteFile.h"
#include	"DynamicArray.h"

//DEFINE

//!コピーのバッファサイズ
#define		MOF_PACKFILE_COPYBUFFERSIZE		1024
//!ファイル名
#define		MOF_PACKFILE_HEADERPATH			260

namespace Mof {
	
	//TYPEDEF STRUCT

	/*******************************//*!
	@brief	パックファイル内のファイル情報ヘッダー

			パックファイル内のファイル情報ヘッダー構造体

	@author	CDW
	*//********************************/
	typedef struct tag_PackFileHeader {
		MofChar				Name[MOF_PACKFILE_HEADERPATH];		//!<ファイル名
		MofU32				Size;								//!<ファイルサイズ
		MofU32				StartAdress;						//!<ファイルの開始アドレス
	}PackFileHeader,*LPPackFileHeader;
	
	/*******************************//*!
	@brief	パックファイル

			パックファイルを扱うクラス

	@author	CDW
	*//********************************/
	class CPackFile : public IMofNamedObject {
	private:
		/*******************//*!
		名前
		*//********************/
		CString						m_Name;
		/*******************//*!
		ファイル数
		*//********************/
		MofU32						m_FileNum;
		/*******************//*!
		ファイル情報
		*//********************/
		LPPackFileHeader			m_pPackHeader;
		
		/*************************************************************************//*!
				@brief			パック分割処理内部関数
				@param[in]		Name			作成ディレクトリ名

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		static MofBool CreateDirectory(LPCMofChar Name);
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CPackFile();
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param[in]		pObj		コピー

				@return			None
		*//**************************************************************************/
		CPackFile(const CPackFile& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CPackFile();

		/*************************************************************************//*!
				@brief			パックファイル作成
				@param[in]		InFile			パックに収めるファイル名の配列
				@param[in]		InCount			パックに収めるファイル数
				@param[in]		OutFile			出力パックファイル名
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		static MofBool Packing(LPMofChar* InFile,MofU32 InCount,LPCMofChar OutFile);
		/*************************************************************************//*!
				@brief			パックファイル作成<br>
								パックファイル内のファイル名にパスの情報を含めない
				@param[in]		InFile			パックに収めるファイル名の配列
				@param[in]		InCount			パックに収めるファイル数
				@param[in]		OutFile			出力パックファイル名
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		static MofBool PackingNoPath(LPMofChar* InFile,MofU32 InCount,LPCMofChar OutFile);
		/*************************************************************************//*!
				@brief			パック分割処理
				@param[in]		file			分割ファイル名

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		static MofBool Split(LPCMofChar file);

		/*************************************************************************//*!
				@brief			読み込み<br>
								パックファイルのヘッダーを読み込む
				@param[in]		file			ファイル名

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		MofBool Load(LPCMofChar file);
		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);

		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前設定
				@param[in]		pName			設定する名前
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetName(LPCMofChar pName);

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前取得
				@param			None

				@return			名前の取得
		*//**************************************************************************/
		virtual LPString GetName(void);
		/*************************************************************************//*!
				@brief			パックファイル内に保存されているファイル数
				@param			None

				@return			パックファイル内に保存されているファイル数の取得
		*//**************************************************************************/
		MofU32 GetFileCount(void) const;
		/*************************************************************************//*!
				@brief			パックファイルヘッダー
				@param			None

				@return			パックファイルヘッダーの取得
		*//**************************************************************************/
		LPPackFileHeader GetFileInfo(void);
		/*************************************************************************//*!
				@brief			パックファイルヘッダー
				@param[in]		file			ファイル名

				@return			パックファイルヘッダーの取得
		*//**************************************************************************/
		LPPackFileHeader GetFileInfo(LPCMofChar file);
		/*************************************************************************//*!
				@brief			パックファイルヘッダー
				@param[in]		No				ファイル番号

				@return			パックファイルヘッダーの取得
		*//**************************************************************************/
		LPPackFileHeader GetFileInfo(MofU32 No);
		/*************************************************************************//*!
				@brief			ファイルデータ
				@param[in]		file			ファイル名

				@return			ファイルデータの取得
		*//**************************************************************************/
		LPMofVoid GetFileData(LPCMofChar file);
		/*************************************************************************//*!
				@brief			ファイルデータ
				@param[in]		file			ファイル名
				@param[out]		pData			出力データ
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		MofBool GetFileData(LPCMofChar file,LPMofVoid pData);

		//クラス基本定義
		MOF_LIBRARYCLASS(CPackFile,MOF_PACKFILECLASS_ID);
	};

	//TYPEDEF
	typedef CPackFile* LPPackFile;
	//リスト置き換え
	typedef CDynamicArray< LPPackFile > CPackFileArray,*LPPackFileArray;

	//INLINE INCLUDE
	#include	"PackFile.inl"

}

#endif		//__PACKFILE__H__

//[EOF]