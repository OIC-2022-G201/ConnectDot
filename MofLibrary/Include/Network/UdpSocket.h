/*************************************************************************//*!
					
					@file	UdpSocket.h
					@brief	UDPソケットクラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__UDPSOCKET__H__

#define		__UDPSOCKET__H__

//INCLUDE
#include	"SocketBase.h"

namespace Mof {
	
	/*******************************//*!
	@brief	UDPソケットクラス

			UDPソケットクラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CUdpSocket : public CSocket {
	protected:
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CUdpSocket();
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CUdpSocket();

		/*************************************************************************//*!
				@brief			ソケットの初期化
				@param			None

				@return			TRUE			正常終了<br>
								それ以外		初期化エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Initialize(void);
		
		/*************************************************************************//*!
				@brief			ソケットのバインド
				@param[in]		port			ポート番号

				@return			TRUE			正常終了<br>
								それ以外		初期化エラー、エラーコードを返す。
		*//**************************************************************************/
		MofBool Bind(const MofU16 port);
		/*************************************************************************//*!
				@brief			ソケットのバインド
				@param[in]		addr			接続用アドレス構造体

				@return			TRUE			正常終了<br>
								それ以外		初期化エラー、エラーコードを返す。
		*//**************************************************************************/
		MofBool Bind(const MOFSOCKETADDR& addr);
		
		/*************************************************************************//*!
				@brief			データの送信
				@param[in]		addr			送信アドレス
				@param[in]		pBuf			送信バッファ
				@param[in]		size			送信バッファサイズ

				@return			送信サイズ
		*//**************************************************************************/
		MofU32 Send(const MOFSOCKETADDR& addr, LPCMofVoid pBuf, const MofU32 size);
		/*************************************************************************//*!
				@brief			データの送信
				@param[in]		addr			送信アドレス
				@param[in]		port			送信ポート
				@param[in]		pBuf			送信バッファ
				@param[in]		size			送信バッファサイズ

				@return			送信サイズ
		*//**************************************************************************/
		MofU32 Send(MofU32 addr, MofU16 port, LPCMofVoid pBuf, const MofU32 size);

		/*************************************************************************//*!
				@brief			データの受信
				@param[in]		pBuf			受信バッファ
				@param[in]		size			受信バッファサイズ
				@param[out]		addr			受信アドレス

				@return			受信サイズ
		*//**************************************************************************/
		MofU32 Receive(LPMofVoid pBuf, const MofU32 size, MOFSOCKETADDR& addr);
		/*************************************************************************//*!
				@brief			データの受信
				@param[in]		pBuf			受信バッファ
				@param[in]		size			受信バッファサイズ
				@param[in]		bKeep			受信バッファ保存フラグ
				@param[out]		addr			受信アドレス

				@return			受信サイズ
		*//**************************************************************************/
		MofU32 Receive(LPMofVoid pBuf, const MofU32 size, MofBool bKeep, MOFSOCKETADDR& addr);

		/*************************************************************************//*!
				@brief			ソケットのクローズ
				@param			None

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Close(void);
		
		/*************************************************************************//*!
				@brief			受信データ判定
				@param			None

				@return			TRUE			受信データがある<br>
								それ以外		受信データはない。
		*//**************************************************************************/
		MofBool IsReceive(void);

		//クラス基本定義
		MOF_LIBRARYCLASS_NOTCOPY(CUdpSocket, MOF_UDPSOCKETCLASS_ID);
	};

#include	"UdpSocket.inl"

}

#endif

//[EOF]