/*************************************************************************//*!
					
					@file	Box.inl
					@brief	î†ââéZä÷òA

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//--------------------------------------------------------------------------------------------
//AABB
//--------------------------------------------------------------------------------------------
/*************************************************************************//*!
		@brief			+=ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB& BoxAABB::operator += (const Vector3& v){
	Position += v;
	return *this;
}
/*************************************************************************//*!
		@brief			-=ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB& BoxAABB::operator -= (const Vector3& v){
	Position -= v;
	return *this;
}
/*************************************************************************//*!
		@brief			floatÇ∆ÇÃ*=ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB& BoxAABB::operator *= ( const MofFloat v ){
	Position *= v;
	Size *= v;
	return *this;
}
/*************************************************************************//*!
		@brief			Vector3Ç∆ÇÃ*=ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB& BoxAABB::operator *= (const Vector3& v){
	Position *= v;
	Size *= v;
	return *this;
}
/*************************************************************************//*!
		@brief			BoxAABBÇ∆ÇÃ*=ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB& BoxAABB::operator *= (const BoxAABB& v){
	Position *= v.Position;
	Size *= v.Size;
	return *this;
}
/*************************************************************************//*!
		@brief			Matrix44Ç∆ÇÃ*ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB& BoxAABB::operator *= (const Matrix44& v){
	Vector3 os;
	CVector3Utilities::TransformCoord(Position, v, Position);
	CMatrix44Utilities::GetScaling(v, os);
	Size *= os;
	return *this;
}
/*************************************************************************//*!
		@brief			floatÇ∆ÇÃ/=ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB& BoxAABB::operator /= ( const MofFloat v ){
	if(v == 0)
	{
		return *this;
	}
	MofFloat tmp = 1.0f  / v;
	Position *= tmp;
	Size *= tmp;
	return *this;
}
/*************************************************************************//*!
		@brief			Vector3Ç∆ÇÃ/=ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB& BoxAABB::operator /= (const Vector3& v){
	Position /= v;
	Size /= v;
	return *this;
}
/*************************************************************************//*!
		@brief			BoxAABBÇ∆ÇÃ/=ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB& BoxAABB::operator /= (const BoxAABB& v){
	Position /= v.Position;
	Size /= v.Size;
	return *this;
}
/*************************************************************************//*!
		@brief			Vector3Ç∆ÇÃ+ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB BoxAABB::operator + ( const Vector3& v ) const{
	return BoxAABB(Position + v,Size + v);
}
/*************************************************************************//*!
		@brief			Vector3Ç∆ÇÃ-ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB BoxAABB::operator - ( const Vector3& v ) const{
	return BoxAABB(Position - v,Size - v);
}
/*************************************************************************//*!
		@brief			floatÇ∆ÇÃ*ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB BoxAABB::operator * ( const MofFloat v ) const{
	return BoxAABB(Position * v,Size * v);
}
/*************************************************************************//*!
		@brief			Vector3Ç∆ÇÃ*ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB BoxAABB::operator * ( const Vector3& v ) const{
	return BoxAABB(Position * v,Size * v);
}
/*************************************************************************//*!
		@brief			Matrix44Ç∆ÇÃ*ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB BoxAABB::operator * ( const Matrix44& v ) const{
	Vector3 op;
	Vector3 os;
	CVector3Utilities::TransformCoord(Position, v, op);
	CMatrix44Utilities::GetScaling(v, os);
	return BoxAABB(op, Size * os);
}
/*************************************************************************//*!
		@brief			BoxAABBÇ∆ÇÃ*ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB BoxAABB::operator * ( const BoxAABB& v ) const{
	return BoxAABB(Position * v.Position, Size * v.Size);
}
/*************************************************************************//*!
		@brief			floatÇ∆ÇÃ/ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB BoxAABB::operator / ( const MofFloat v ) const{
	if(v == 0)
	{
		return *this;
	}
	return BoxAABB(Position / v, Size / v);
}
/*************************************************************************//*!
		@brief			Vector3Ç∆ÇÃ/ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB BoxAABB::operator / ( const Vector3& v ) const{
	return BoxAABB(Position / v, Size / v);
}
/*************************************************************************//*!
		@brief			BoxAABBÇ∆ÇÃ/ââéZ
*//**************************************************************************/
FORCE_INLINE BoxAABB BoxAABB::operator / ( const BoxAABB& v ) const{
	return BoxAABB(Position / v.Position, Size / v.Size);
}
/*************************************************************************//*!
		@brief			==îªíf
*//**************************************************************************/
FORCE_INLINE bool BoxAABB::operator == ( const BoxAABB& v ) const{
	return Position == v.Position && Size == v.Size;
}
/*************************************************************************//*!
		@brief			!=îªíf
*//**************************************************************************/
FORCE_INLINE bool BoxAABB::operator != ( const BoxAABB& v ) const{
	return Position != v.Position || Size != v.Size;
}
//--------------------------------------------------------------------------------------------
//OBB
//--------------------------------------------------------------------------------------------
/*************************************************************************//*!
		@brief			==îªíf
*//**************************************************************************/
FORCE_INLINE bool BoxOBB::operator == ( const BoxOBB& v ) const{
	return Position == v.Position && Size == v.Size && Angle == v.Angle;
}
/*************************************************************************//*!
		@brief			!=îªíf
*//**************************************************************************/
FORCE_INLINE bool BoxOBB::operator != ( const BoxOBB& v ) const{
	return Position != v.Position || Size != v.Size || Angle != v.Angle;
}
//--------------------------------------------------------------------------------------------
//CAABBUtilities
//--------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------
//COBBUtilities
//--------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------
//CAABB
//--------------------------------------------------------------------------------------------
/*************************************************************************//*!
		@brief			à⁄ìÆ<br>
						mà⁄ìÆÇ∑ÇÈÅB
		@param[in]		m			à⁄ìÆó 
				
		@return			None
*//**************************************************************************/
FORCE_INLINE void CBoxAABB::Translation(const Vector3& m) {
	Position += m;
	return;
}
/*************************************************************************//*!
		@brief			à⁄ìÆ<br>
						posÇÃà íuÇ…à⁄ìÆÇ∑ÇÈÅB
		@param[in]		pos			à íu
				
		@return			None
*//**************************************************************************/
FORCE_INLINE void CBoxAABB::SetPosition(const Vector3& pos){
	Position = pos;
	return;
}
/*************************************************************************//*!
		@brief			ë„ì¸
*//**************************************************************************/
FORCE_INLINE CBoxAABB& CBoxAABB::operator = ( const BoxAABB& v ){
	Position = v.Position;
	Size = v.Size;
	return *this;
}

//--------------------------------------------------------------------------------------------
//COBB
//--------------------------------------------------------------------------------------------
/*************************************************************************//*!
		@brief			ë„ì¸
*//**************************************************************************/
FORCE_INLINE CBoxOBB& CBoxOBB::operator = ( const BoxOBB& v ){
	Position = v.Position;
	Size = v.Size;
	Angle = v.Angle;
	Axis[0] = v.Axis[0];
	Axis[1] = v.Axis[1];
	Axis[2] = v.Axis[2];
	return *this;
}

//[EOF]