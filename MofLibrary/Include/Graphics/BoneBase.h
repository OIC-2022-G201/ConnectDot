/*************************************************************************//*!
					
					@file	BoneBase.h
					@brief	ボーン基底クラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__BONEBASE__H__

#define		__BONEBASE__H__

//INCLUDE
#include	"Bone.h"

namespace Mof {
	
	/*******************************//*!
	@brief	ボーン基底クラス

			ボーン基底となるクラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CBone : public IBone {
	protected:
		/*******************//*!
		内部ID
		*//********************/
		MofU32						m_ID;
		/*******************//*!
		フラグ
		*//********************/
		MofU32						m_Flag;
		/*******************//*!
		名前
		*//********************/
		CString						m_Name;
		/*******************//*!
		親の名前
		*//********************/
		CString						m_ParentName;
		/*******************//*!
		変換行列
		*//********************/
		CMatrix44					m_Matrix;
		/*******************//*!
		オフセット行列
		*//********************/
		CMatrix44					m_OffsetMatrix;
		/*******************//*!
		オフセット行列の回転成分のみ
		*//********************/
		CMatrix33					m_RotationOffsetMatrix;
		/*******************//*!
		ウェイト
		*//********************/
		LPGeometryBoneWeightArray	m_pWeights;
		/*******************//*!
		ＩＫ
		*//********************/
		LPBoneIKInfoArray			m_pIKs;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CBone();
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param[in]		pObj		コピーボーン

				@return			None
		*//**************************************************************************/
		CBone(const CBone& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CBone();
		
		/*************************************************************************//*!
				@brief			ボーンのコピー生成
				@param			None
				
				@return			作成されたコピーCBone<br>
								作成に失敗した場合NULLを返す
		*//**************************************************************************/
		virtual IBone* CreateCopyObject(void) const;

		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);

		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			ID設定
				@param[in]		id				ID
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetID(MofU32 id);
		/*************************************************************************//*!
				@brief			フラグ設定
				@param[in]		flg				フラグ
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetFlag(MofU32 flg);
		/*************************************************************************//*!
				@brief			名前設定
				@param[in]		pName			設定する名前
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetName(LPCMofChar pName);

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			ID取得
				@param			None

				@return			ID
		*//**************************************************************************/
		virtual MofU32 GetID(void);
		/*************************************************************************//*!
				@brief			フラグ取得
				@param			None

				@return			フラグ
		*//**************************************************************************/
		virtual MofU32 GetFlag(void);
		/*************************************************************************//*!
				@brief			名前取得
				@param			None

				@return			名前の取得
		*//**************************************************************************/
		virtual LPString GetName(void);
		/*************************************************************************//*!
				@brief			親の名前取得
				@param			None

				@return			親の名前
		*//**************************************************************************/
		virtual LPString GetParentName(void);
		/*************************************************************************//*!
				@brief			変換行列取得
				@param			None

				@return			変換行列
		*//**************************************************************************/
		virtual CMatrix44& GetMatrix(void);
		/*************************************************************************//*!
				@brief			変換行列取得
				@param[out]		pos				座標変換
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool GetLocalTranslation(Vector3& pos);
		/*************************************************************************//*!
				@brief			オフセット行列取得
				@param			None

				@return			オフセット行列
		*//**************************************************************************/
		virtual CMatrix44& GetOffsetMatrix(void);
		/*************************************************************************//*!
				@brief			オフセット行列取得
				@param			None

				@return			オフセット行列
		*//**************************************************************************/
		virtual CMatrix33& GetRotationOffsetMatrix(void);
		/*************************************************************************//*!
				@brief			ウェイト配列取得
				@param			None

				@return			ウェイト配列
		*//**************************************************************************/
		virtual LPGeometryBoneWeightArray GetWeightsArray(void);
		/*************************************************************************//*!
				@brief			ＩＫ配列取得
				@param			None

				@return			ＩＫ配列
		*//**************************************************************************/
		virtual LPBoneIKInfoArray GetIKsArray(void);

		//クラス基本定義
		MOF_LIBRARYCLASS(CBone,MOF_BONECLASS_ID);
	};

	#include	"BoneBase.inl"

}

#endif

//[EOF]