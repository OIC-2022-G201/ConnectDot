/*************************************************************************//*!
					
					@file	ShaderLinkerBase.h
					@brief	シェーダー基底インターフェイス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__SHADERLINKERBASE__H__

#define		__SHADERLINKERBASE__H__

//INCLUDE
#include	"ShaderLinker.h"

namespace Mof {
	
	/*******************************//*!
	@brief	シェーダーインターフェイス

			シェーダーの読み込み、設定を行うためのインターフェイス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CShaderLinkerBase : public IShaderLinker {
	protected:
		/*******************//*!
		シェーダー
		*//********************/
		LPShader						m_pShader;
		/*******************//*!
		シェーダーバインド
		*//********************/
		LPShaderBind					m_pShaderBind;
		/*******************//*!
		リンク
		*//********************/
		LPLinkArray						m_pLink;
		/*******************//*!
		リンクテクスチャ
		*//********************/
		LPLinkTextureArray				m_pLinkTexture;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CShaderLinkerBase();
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param[in]		pObj		コピーシェーダー

				@return			None
		*//**************************************************************************/
		CShaderLinkerBase(const CShaderLinkerBase& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CShaderLinkerBase();

		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);

		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前設定
				@param[in]		pName			設定する名前
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetName(LPCMofChar pName);

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前取得
				@param			None

				@return			名前の取得
		*//**************************************************************************/
		virtual LPString GetName(void);
		/*************************************************************************//*!
				@brief			変数とのリンクの取得
				@param			None

				@return			変数とのリンク
		*//**************************************************************************/
		virtual LPLinkArray GetLink(void);
		/*************************************************************************//*!
				@brief			テクスチャとのリンクの取得
				@param			None

				@return			テクスチャとのリンク
		*//**************************************************************************/
		virtual LPLinkTextureArray GetTextureLink(void);
		/*************************************************************************//*!
				@brief			シェーダーの取得
				@param			None

				@return			シェーダー
		*//**************************************************************************/
		virtual LPShader GetShader(void);
		/*************************************************************************//*!
				@brief			シェーダーバインドの取得
				@param			None

				@return			シェーダーバインド
		*//**************************************************************************/
		virtual LPShaderBind GetShaderBind(void);
	};

	#include	"ShaderLinkerBase.inl"
}

#endif

//[EOF]