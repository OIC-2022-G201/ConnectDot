/*************************************************************************//*!
					
					@file	VertexBufferBase.h
					@brief	頂点バッファ基底クラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__VERTEXBUFFERBASE__H__

#define		__VERTEXBUFFERBASE__H__

//INCLUDE
#include	"VertexBuffer.h"

namespace Mof {
	
	/*******************************//*!
	@brief	頂点バッファ基底クラス

			頂点バッファの作成、設定を行うための基底クラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CVertexBufferBase : public IVertexBuffer {
	protected:
		/*******************//*!
		頂点データ
		*//********************/
		LPMofVoid					m_pVertex;
		/*******************//*!
		頂点サイズ
		*//********************/
		MofU32						m_Size;
		/*******************//*!
		頂点属性
		*//********************/
		MofU32						m_ElementCount;
		/*******************//*!
		頂点フラグ
		*//********************/
		VertexFlag					m_Flag;
		/*******************//*!
		頂点数
		*//********************/
		MofU32						m_Count;
		/*******************//*!
		バッファ管理方法
		*//********************/
		BufferAccess				m_Usage;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CVertexBufferBase();
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param[in]		pObj		コピーバッファ

				@return			None
		*//**************************************************************************/
		CVertexBufferBase(const CVertexBufferBase& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CVertexBufferBase();
		
		/*************************************************************************//*!
				@brief			頂点サイズの計算
				@param[in]		Flag			計算するフラグの組み合わせ

				@return			必要なサイズ
		*//**************************************************************************/
		static MofU32 CalculateVertexSize(VertexFlag Flag);
		/*************************************************************************//*!
				@brief			頂点フラグ数の計算
				@param[in]		Flag			計算するフラグの組み合わせ

				@return			必要なフラグ数
		*//**************************************************************************/
		static MofU32 CalculateVertexFlagCount(VertexFlag Flag);
		/*************************************************************************//*!
				@brief			特定フラグのオフセット位置の計算
				@param[in]		OFlag			調べたいフラグ

				@return			フラグのオフセット位置
		*//**************************************************************************/
		virtual MofU32 CalculateVertexOffset(VertexFlag OFlag);
		/*************************************************************************//*!
				@brief			特定フラグのオフセット位置の計算
				@param[in]		Flag			計算するフラグの組み合わせ
				@param[in]		OFlag			調べたいフラグ

				@return			フラグのオフセット位置
		*//**************************************************************************/
		static MofU32 CalculateVertexOffset(VertexFlag Flag,VertexFlag OFlag);
		
		/*************************************************************************//*!
				@brief			バッファの作成
				@param			None
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool CreateBuffer(void) = 0;
		/*************************************************************************//*!
				@brief			バッファの作成
				@param[in]		vf				頂点フラグ(VertexFlagの組み合わせで指定)
				@param[in]		c				数
				@param[in]		pVert			頂点データ
				@param[in]		Usage			利用方法
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool CreateBuffer(const MofU32 vf, const MofU32 c, LPCMofVoid pVert, const BufferAccess Usage);
		/*************************************************************************//*!
				@brief			バッファの頂点フラグを変更する
				@param[in]		vf				頂点フラグ(VertexFlagの組み合わせで指定)
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool ChangeVertexFlag(const MofU32 vf);

		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);
		
		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			バッファの設定
				@param[in]		Usage			利用方法
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetUsage(const BufferAccess Usage);
		/*************************************************************************//*!
				@brief			バッファの設定
				@param[in]		vf				頂点フラグ(VertexFlagの組み合わせで指定)
				@param[in]		c				数
				@param[in]		pVert			頂点データ
				@param[in]		Usage			利用方法
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetBufferData(const MofU32 vf, const MofU32 c, LPCMofVoid pVert, const BufferAccess Usage);

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			頂点取得
				@param			None

				@return			頂点の取得
		*//**************************************************************************/
		virtual LPMofVoid GetVertex(void) const;
		/*************************************************************************//*!
				@brief			頂点サイズ取得
				@param			None

				@return			頂点サイズの取得
		*//**************************************************************************/
		virtual MofU32 GetVertexSize(void) const;
		/*************************************************************************//*!
				@brief			頂点属性数取得
				@param			None

				@return			頂点属性数の取得
		*//**************************************************************************/
		virtual MofU32 GetVertexElementCount(void) const;
		/*************************************************************************//*!
				@brief			頂点フラグ取得
				@param			None

				@return			頂点フラグの取得
		*//**************************************************************************/
		virtual VertexFlag GetVertexFlag(void) const;
		/*************************************************************************//*!
				@brief			頂点数取得
				@param			None

				@return			頂点数の取得
		*//**************************************************************************/
		virtual MofU32 GetVertexCount(void) const;
	};

	#include	"VertexBufferBase.inl"
}

#endif

//[EOF]