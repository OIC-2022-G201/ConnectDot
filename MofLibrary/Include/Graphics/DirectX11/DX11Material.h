/*************************************************************************//*!
					
					@file	DX11Material.h
					@brief	DirectX11マテリアルクラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__DX11MATERIAL__H__

#define		__DX11MATERIAL__H__

//INCLUDE
#include	"../MaterialBase.h"
#include	"DX11Texture.h"

namespace Mof {
	
	/*******************************//*!
	@brief	DirectX11マテリアルクラス

			DirectX11マテリアルクラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CDX11Material : public CMaterialBase {
	protected:
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CDX11Material();
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param[in]		pObj		コピーマテリアル

				@return			None
		*//**************************************************************************/
		CDX11Material(const CDX11Material& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CDX11Material();
		
		/*************************************************************************//*!
				@brief			コピーバッファの作成
				@param			None

				@return			作成されたコピーバッファ<br>
								作成に失敗した場合NULLを返す
		*//**************************************************************************/
		virtual IMaterial* CreateCopyObject(void) const;

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		
		
		//クラス基本定義
		MOF_LIBRARYCLASS(CDX11Material,MOF_DX11MATERIALCLASS_ID);
	};

	#include	"DX11Material.inl"
	
	//置き換え
	typedef CDX11Material		CMaterial;
}

#endif

//[EOF]