/*************************************************************************//*!
					
					@file	DX11ShaderTechnique.h
					@brief	DirectX11シェーダーテクニッククラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__DX11SHADERTECHNIQUE__H__

#define		__DX11SHADERTECHNIQUE__H__

//INCLUDE
#include	"../ShaderTechniqueBase.h"
#include	"DX11ShaderPass.h"

namespace Mof {
	
	/*******************************//*!
	@brief	DirectX11シェーダーテクニッククラス

			DirectX11でのシェーダーのテクニック設定を行うためのクラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CDX11ShaderTechnique : public CShaderTechniqueBase {
	protected:
		/*******************//*!
		シェーダーテクニック
		*//********************/
		ID3DX11EffectTechnique*	m_pTechnique;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CDX11ShaderTechnique();
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param[in]		pTec		テクニック

				@return			None
		*//**************************************************************************/
		CDX11ShaderTechnique(ID3DX11EffectTechnique* pTec);
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param[in]		pObj		コピーシェーダー

				@return			None
		*//**************************************************************************/
		CDX11ShaderTechnique(const CDX11ShaderTechnique& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CDX11ShaderTechnique();
		
		/*************************************************************************//*!
				@brief			シェーダーテクニックの開始
				@param[in]		Flag		適用フラグ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Begin(MofU32 Flag);
		/*************************************************************************//*!
				@brief			シェーダーパスの開始
				@param[in]		nPass		パス番号
				@param[in]		Flag		適用フラグ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool BeginPass(MofU32 nPass,MofU32 Flag);
		/*************************************************************************//*!
				@brief			シェーダーテクニックの終了
				@param			None
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool End(void);
		/*************************************************************************//*!
				@brief			シェーダーパスの終了
				@param			None
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool EndPass(void);

		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);

		//クラス基本定義
		MOF_LIBRARYCLASS(CDX11ShaderTechnique,MOF_DX11SHADERTECHNIQUECLASS_ID);
	};

	#include	"DX11ShaderTechnique.inl"
}

#endif

//[EOF]