/*************************************************************************//*!
					
					@file	ShaderBase.h
					@brief	シェーダー基底クラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__SHADERBASE__H__

#define		__SHADERBASE__H__

//INCLUDE
#include	"Shader.h"

namespace Mof {
	
	/*******************************//*!
	@brief	シェーダー基底クラス

			環境に依存しない基本的なシェーダーの処理を行う基底クラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CShaderBase : public IShader {
	protected:
		/*******************//*!
		名前
		*//********************/
		CString						m_Name;
		/*******************//*!
		利用テクニック
		*//********************/
		MofU32						m_NowTechnique;
		/*******************//*!
		テクニック配列
		*//********************/
		LPShaderTechniqueArray		m_pTechniqueArray;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CShaderBase();
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param[in]		pObj		コピーシェーダー

				@return			None
		*//**************************************************************************/
		CShaderBase(const CShaderBase& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CShaderBase();
		
		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);
		
		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前設定
				@param[in]		pName			設定する名前
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetName(LPCMofChar pName);
		/*************************************************************************//*!
				@brief			テクニック設定
				@param[in]		tn			テクニック番号
					
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool SetTechnique(MofU32 tn);
		/*************************************************************************//*!
				@brief			テクニック設定
				@param[in]		pName		テクニック名
					
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool SetTechniqueByName(LPCMofChar pName);

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前取得
				@param			None

				@return			名前の取得
		*//**************************************************************************/
		virtual LPString GetName(void);
		/*************************************************************************//*!
				@brief			テクニックの数取得
				@param			None

				@return			テクニックの数
		*//**************************************************************************/
		virtual MofU32 GetTechniqueCount(void) const;
		/*************************************************************************//*!
				@brief			テクニック取得
				@param			None

				@return			テクニック<br>
								存在しない場合NULL
		*//**************************************************************************/
		virtual LPShaderTechnique GetTechnique(void);
		/*************************************************************************//*!
				@brief			テクニック取得
				@param[in]		n			テクニック

				@return			テクニック<br>
								存在しない場合NULL
		*//**************************************************************************/
		virtual LPShaderTechnique GetTechnique(MofU32 n);
		/*************************************************************************//*!
				@brief			テクニック取得
				@param[in]		pName		テクニック名

				@return			テクニック<br>
								存在しない場合NULL
		*//**************************************************************************/
		virtual LPShaderTechnique GetTechniqueByName(LPCMofChar pName);
	};

	#include	"ShaderBase.inl"
}

#endif

//[EOF]