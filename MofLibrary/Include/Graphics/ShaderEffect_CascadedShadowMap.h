/*************************************************************************//*!
					
					@file	ShaderEffect_CascadedShadowMap.h
					@brief	カスケードシャドウマップシェーダー。

															@author	CDW
															@date	2015.06.03
*//**************************************************************************/

//ONCE
#ifndef		__SHADEREFFECT_CASCADEDSHADOWMAP__H__

#define		__SHADEREFFECT_CASCADEDSHADOWMAP__H__

//INCLUDE
#include	"ShaderEffect_ShadowTexture.h"
#include	"ShaderEffect_CascadeVarianceRenderer.h"
#include	"ShaderEffect_BlurBase.h"

namespace Mof {
	
	/*******************************//*!
	@brief	カスケードシャドウマップシェーダー。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CShaderEffect_CascadedShadowMap : public IShaderEffect {
	public:
		/*******************//*!
		カスケード最大数
		*//********************/
		static const MofU32 MAX_CASCADES = 3;
	protected:
		/*******************//*!
		シャドウマップ用深度テクスチャ描画シェーダー
		*//********************/
		LPShaderEffect_ShadowTexture m_pShadowTextures[MAX_CASCADES];
		/*******************//*!
		シャドウマップによる影描画シェーダー
		*//********************/
		LPShaderEffect_CascadeVarianceRenderer m_pShadowRenderer;
		/*******************//*!
		影のぼかしシェーダー
		*//********************/
		LPShaderEffect_BlurBase m_pBlurShader;
		/*******************//*!
		ぼかし処理の中間描画先
		*//********************/
		LPTexture m_pShadowMapTempBlur;

		/*******************//*!
		カスケードの分割位置
		*//********************/
		MofFloat m_CascadePartitions[MAX_CASCADES];
		/*******************//*!
		ライト視点の射影行列の配列
		*//********************/
		CMatrix44 m_matShadowProj[MAX_CASCADES];
		/*******************//*!
		ライト視点のビュー行列
		*//********************/
		CMatrix44 m_matShadowView;
		/*******************//*!
		影のぼかし具合
		*//********************/
		MofFloat m_BlurStep;
		/*******************//*!
		カスケードの境界のぼかし具合
		*//********************/
		MofFloat m_CascadeBlendArea;
		/*******************//*!
		ライトブリーディングを抑えるための値
		*//********************/
		MofFloat m_ShadowPower;
		/*******************//*!
		シャドウマップのNear
		*//********************/
		MofFloat m_ShadowNear;
		/*******************//*!
		シャドウマップのFar;
		*//********************/
		MofFloat m_ShadowFar;

		static void CreateFrustumPointsFromCascadeInterval(MofFloat fCascadeIntervalBegin,MofFloat fCascadeIntervalEnd,const Matrix44& vProjection,Vector4* pvCornerPointsWorld);
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CShaderEffect_CascadedShadowMap();
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CShaderEffect_CascadedShadowMap();
		
		/*************************************************************************//*!
				@brief			シェーダーエフェクトの作成。
				@param			None

				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Create();
		/*************************************************************************//*!
				@brief			シェーダーエフェクトの作成。
				@param[in]		TexSize		シャドウマップ用テクスチャサイズ

				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Create(MofU32 TexSize);
		/*************************************************************************//*!
				@brief			シェーダーエフェクトの作成。
				@param[in]		Variance	バリアンスフラグ
				@param[in]		TexSize		シャドウマップ用テクスチャサイズ
				@param[in]		TexFormat	シャドウマップ用テクスチャフォーマット
				@param[in]		DepthFormat	シャドウマップ用テクスチャフォーマット

				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Create(MofU32 TexSize,MofBool Variance,PixelFormat TexFormat,PixelFormat DepthFormat);
		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);
		
		/*************************************************************************//*!
				@brief			深度テクスチャ作成開始
				@param			None
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool BeginCascades();
		/*************************************************************************//*!
				@brief			深度テクスチャ作成開始
				@param[in]		n				深度テクスチャ番号
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool BeginTexture(MofU32 n);
		/*************************************************************************//*!
				@brief			深度テクスチャ作成終了
				@param			None
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool EndCascades();
		/*************************************************************************//*!
				@brief			影を適用した画面描画開始
				@param			None
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool BeginRenderer();
		/*************************************************************************//*!
				@brief			影を適用した画面描画終了
				@param			None
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool EndRenderer();

		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			カスケード分割位置の設定
				@param[in]		Index			カスケード番号
				@param[in]		PartitionDepth	分割位置
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool SetCascadePartition(MofU32 Index,MofFloat PartitionDepth);
		/*************************************************************************//*!
				@brief			影のぼかし幅の設定
				@param[in]		BlurStep		影のぼかし幅
				
				@return			None
		*//**************************************************************************/
		virtual void SetBlurStep(MofFloat BlurStep);
		/*************************************************************************//*!
				@brief			カスケード境界のぼかし具合の設定
				@param[in]		CascadeBlendArea	カスケード境界のぼかし具合
				
				@return			None
		*//**************************************************************************/
		virtual void SetCascadeBlendArea(MofFloat CascadeBlendArea);
		/*************************************************************************//*!
				@brief			ライトブリーディングを抑えるための値を設定
				@param[in]		ShadowPower		ライトブリーディングを抑えるための値
				
				@return			None
		*//**************************************************************************/
		virtual void SetShadowPower(MofFloat ShadowPower);
		/*************************************************************************//*!
				@brief			シャドウマップのNear設定
				@param[in]		ShadowNear		シャドウマップのNear
				
				@return			None
		*//**************************************************************************/
		virtual void SetShadowNear(MofFloat ShadowNear);
		/*************************************************************************//*!
				@brief			シャドウマップのFar設定
				@param[in]		ShadowFar	シャドウマップのFar
				
				@return			None
		*//**************************************************************************/
		virtual void SetShadowFar(MofFloat ShadowFar);

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			シェーダーの取得
				@param			None
				
				@return			シェーダーを返す。
								失敗の場合NULLになる。
		*//**************************************************************************/
		virtual LPShader GetShader(void);
		/*************************************************************************//*!
				@brief			シェーダーバインドの取得
				@param			None
				
				@return			シェーダーバインドを返す。
								失敗の場合NULLになる。
		*//**************************************************************************/
		virtual LPShaderBind GetShaderBind(void);
		/*************************************************************************//*!
				@brief			深度テクスチャの取得
				@param[in]		n				エフェクト番号
				
				@return			深度テクスチャ
		*//**************************************************************************/
		virtual LPShaderEffect_ShadowTexture GetShadowMap(MofU32 n);
		/*************************************************************************//*!
				@brief			深度テクスチャの取得
				@param[in]		n				エフェクト番号
				
				@return			深度テクスチャ
		*//**************************************************************************/
		virtual LPTexture GetShadowMapTexture(MofU32 n);
		/*************************************************************************//*!
				@brief			カスケードシャドウマップの段階数取得
				@param			None
				
				@return			カスケードシャドウマップの段階数
		*//**************************************************************************/
		virtual MofU32 GetCascadeLevels(void);
		/*************************************************************************//*!
				@brief			ライト視点のビュー行列取得
				@param			None

				@return			ライト視点のビュー行列
		*//**************************************************************************/
		virtual CMatrix44& GetLightViewMatrix(void);
		/*************************************************************************//*!
				@brief			カスケードプロジェクション行列の取得
				@param[in]		n				エフェクト番号
				
				@return			カスケードプロジェクション行列
		*//**************************************************************************/
		virtual CMatrix44& GetCascadeProjectionMatrix(MofU32 n);
		/*************************************************************************//*!
				@brief			影のぼかし幅の取得
				@param			None
				
				@return			影のぼかし幅
		*//**************************************************************************/
		virtual MofFloat GetBlurStep(void);
		/*************************************************************************//*!
				@brief			カスケード境界のぼかし具合の取得
				@param			None
				
				@return			カスケード境界のぼかし具合
		*//**************************************************************************/
		virtual MofFloat GetCascadeBlendArea(void);
		/*************************************************************************//*!
				@brief			ライトブリーディングを抑えるための値を取得
				@param			None
				
				@return			ライトブリーディングを抑えるための値
		*//**************************************************************************/
		virtual MofFloat GetShadowPower(void);

		//クラス基本定義
		MOF_LIBRARYCLASS(CShaderEffect_CascadedShadowMap,MOF_SHADEREFFECTCASCADEDSHADOWMAPCLASS_ID);
	};

	// 置き換え
	typedef CShaderEffect_CascadedShadowMap*			LPShaderEffect_CascadedShadowMap;

#include	"ShaderEffect_CascadedShadowMap.inl"

}

#endif

//[EOF]
