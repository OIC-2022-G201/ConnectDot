/*************************************************************************//*!
					
					@file	ShaderTechnique.h
					@brief	シェーダーテクニック基底インターフェイス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__SHADERTECHNIQUE__H__

#define		__SHADERTECHNIQUE__H__

//INCLUDE
#include	"ShaderPass.h"

namespace Mof {
	
	/*******************************//*!
	@brief	シェーダーテクニックインターフェイス

			シェーダーのテクニック設定を行うためのインターフェイス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API IShaderTechnique : public IMofNamedObject {
	protected:
	public:
		/*************************************************************************//*!
				@brief			シェーダーテクニックの開始
				@param[in]		Flag		適用フラグ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Begin(MofU32 Flag) = 0;
		/*************************************************************************//*!
				@brief			シェーダーパスの開始
				@param[in]		nPass		パス番号
				@param[in]		Flag		適用フラグ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool BeginPass(MofU32 nPass,MofU32 Flag) = 0;
		/*************************************************************************//*!
				@brief			シェーダーテクニックの終了
				@param			None
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool End(void) = 0;
		/*************************************************************************//*!
				@brief			シェーダーパスの終了
				@param			None
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool EndPass(void) = 0;
		
		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			パスの数取得
				@param			None

				@return			パスの数
		*//**************************************************************************/
		virtual MofU32 GetPassCount(void) const = 0;
		/*************************************************************************//*!
				@brief			パスの取得
				@param[in]		n			パス番号

				@return			パス
		*//**************************************************************************/
		virtual LPShaderPass GetPass(MofU32 n) = 0;
	};

	//ポインタ置き換え
	typedef IShaderTechnique*		LPShaderTechnique;
	typedef CDynamicArray< LPShaderTechnique > CShaderTechniqueArray,*LPShaderTechniqueArray;
}

#endif

//[EOF]