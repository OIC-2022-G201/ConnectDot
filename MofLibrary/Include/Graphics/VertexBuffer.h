/*************************************************************************//*!
					
					@file	VertexBuffer.h
					@brief	頂点バッファ基底インターフェイス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__VERTEXBUFFER__H__

#define		__VERTEXBUFFER__H__

//INCLUDE
#include	"GraphicsCommon.h"

namespace Mof {
	
	/*******************************//*!
	@brief	頂点バッファインターフェイス

			頂点バッファの作成、設定を行うためのインターフェイス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API IVertexBuffer : public IMofObject , public IMofCopyObject< IVertexBuffer > {
	protected:
	public:
		/*************************************************************************//*!
				@brief			バッファの作成
				@param			None
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool CreateBuffer(void) = 0;
		/*************************************************************************//*!
				@brief			バッファの作成
				@param[in]		vf				頂点フラグ(VertexFlagの組み合わせで指定)
				@param[in]		c				数
				@param[in]		pVert			頂点データ
				@param[in]		Usage			利用方法
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool CreateBuffer(const MofU32 vf, const MofU32 c, LPCMofVoid pVert, const BufferAccess Usage) = 0;
		/*************************************************************************//*!
				@brief			バッファの頂点フラグを変更する
				@param[in]		vf				頂点フラグ(VertexFlagの組み合わせで指定)
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool ChangeVertexFlag(const MofU32 vf) = 0;
				
		/*************************************************************************//*!
				@brief			特定フラグのオフセット位置の計算
				@param[in]		OFlag			調べたいフラグ

				@return			フラグのオフセット位置
		*//**************************************************************************/
		virtual MofU32 CalculateVertexOffset(VertexFlag OFlag) = 0;

		/*************************************************************************//*!
				@brief			バッファのマップ
				@param[in]		mt				マップタイプ
				
				@return			マップされたメモリアドレスを返す。<br>
								失敗の場合NULLになる。
		*//**************************************************************************/
		virtual LPMofVoid Map(MofU32 mt) = 0;
		/*************************************************************************//*!
				@brief			バッファのアンマップ
				@param			None
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool UnMap(void) = 0;
		/*************************************************************************//*!
				@brief			バッファの更新<br>
								バッファの生成方法がBUFFERACCESS_GPUREADWRITEの場合に自分のメンバーデータでバッファの内容を更新する。
				@param			None
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool UpdateBuffer(void) = 0;
		
		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			バッファの設定
				@param[in]		Usage			利用方法
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetUsage(const BufferAccess Usage) = 0;
		/*************************************************************************//*!
				@brief			バッファの設定
				@param[in]		vf				頂点フラグ(VertexFlagの組み合わせで指定)
				@param[in]		c				数
				@param[in]		pVert			頂点データ
				@param[in]		Usage			利用方法
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetBufferData(const MofU32 vf, const MofU32 c, LPCMofVoid pVert, const BufferAccess Usage) = 0;

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			頂点取得
				@param			None

				@return			頂点の取得
		*//**************************************************************************/
		virtual LPMofVoid GetVertex(void) const = 0;
		/*************************************************************************//*!
				@brief			頂点バッファ取得
				@param			None

				@return			頂点バッファの取得
		*//**************************************************************************/
		virtual MofVertexBuffer GetBuffer(void) const = 0;
		/*************************************************************************//*!
				@brief			頂点サイズ取得
				@param			None

				@return			頂点サイズの取得
		*//**************************************************************************/
		virtual MofU32 GetVertexSize(void) const = 0;
		/*************************************************************************//*!
				@brief			頂点属性数取得
				@param			None

				@return			頂点属性数の取得
		*//**************************************************************************/
		virtual MofU32 GetVertexElementCount(void) const = 0;
		/*************************************************************************//*!
				@brief			頂点フラグ取得
				@param			None

				@return			頂点フラグの取得
		*//**************************************************************************/
		virtual VertexFlag GetVertexFlag(void) const = 0;
		/*************************************************************************//*!
				@brief			頂点数取得
				@param			None

				@return			頂点数の取得
		*//**************************************************************************/
		virtual MofU32 GetVertexCount(void) const = 0;
	};

	//ポインタ置き換え
	typedef IVertexBuffer*			LPVertexBuffer;
}

#endif

//[EOF]