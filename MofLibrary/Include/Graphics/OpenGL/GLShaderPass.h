/*************************************************************************//*!
					
					@file	GLShaderPass.h
					@brief	OpenGLシェーダーパスクラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__GLSHADERPASS__H__

#define		__GLSHADERPASS__H__

//INCLUDE
#include	"../ShaderPassBase.h"

namespace Mof {
	
	/*******************************//*!
	@brief	OpenGLシェーダーパスクラス

			OpenGLでのシェーダーのパス設定を行うためのクラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CGLShaderPass : public CShaderPassBase {
	protected:
		/*******************//*!
		シェーダーテクニック
		*//********************/
		ID3GLEffectPass*			m_pPass;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CGLShaderPass();
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param[in]		pPass		パス

				@return			None
		*//**************************************************************************/
		CGLShaderPass(ID3GLEffectPass* pPass);
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param			pObj		コピーシェーダー

				@return			None
		*//**************************************************************************/
		CGLShaderPass(const CGLShaderPass& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CGLShaderPass();
		
		/*************************************************************************//*!
				@brief			シェーダーパスの開始
				@param[in]		Flag		適用フラグ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Begin(MofU32 Flag);
		/*************************************************************************//*!
				@brief			シェーダーパスの終了
				@param			None
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool End(void);

		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);

		//クラス基本定義
		MOF_LIBRARYCLASS(CGLShaderPass,MOF_GLSHADERPASSCLASS_ID);
	};

#include	"GLShaderPass.h"

}

#endif

//[EOF]