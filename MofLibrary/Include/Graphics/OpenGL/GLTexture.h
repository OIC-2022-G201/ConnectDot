/*************************************************************************//*!
					
					@file	GLTexture.h
					@brief	OpenGLテクスチャ基底クラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__GLTEXTURE__H__

#define		__GLTEXTURE__H__

//INCLUDE
#include	"../TextureBase.h"
#include	"../libpng/png.h"
#include	<android/bitmap.h>

namespace Mof {
	
	/*******************************//*!
	@brief	OpenGLテクスチャクラス

			OpenGLでのテクスチャ読み込み、描画を行うクラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CGLTexture : public CTextureBase {
	protected:
		/*******************//*!
		GL内部ファイルID
		*//********************/
		MofTexture					m_TexId;
		/*******************//*!
		//ビットサイズ
		*//********************/
		MofU8						m_Bits;
		/*******************//*!
		実ファイル
		*//********************/
		LPMofU8						m_pTextureData;
		/*******************//*!
		描画ターゲット
		*//********************/
		LPRenderTarget				m_pRenderTarget;

		/*************************************************************************//*!
				@brief			テクスチャの読み込み
				@param[in]		pData			ファイルデータ
				@param[in]		Size			ファイルサイズ

				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		MofBool LoadPng(LPMofU8 pData,MofU32 Size);
		/*************************************************************************//*!
				@brief			OpenGL内でのIDを設定します。
				@param			None

				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		MofBool GenId(void);
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CGLTexture();
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param			pObj		コピーテクスチャ

				@return			None
		*//**************************************************************************/
		CGLTexture(const CGLTexture& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CGLTexture();

		/*************************************************************************//*!
				@brief			テクスチャの読み込み
				@param[in]		pName		ファイル名
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPCMofChar pName);
		/*************************************************************************//*!
				@brief			テクスチャの読み込み
				@param[in]		pName		名前
				@param[in]		pData		メモリアドレス
				@param[in]		Size		サイズ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPCMofChar pName,LPMofVoid pData,MofU32 Size);
		
		/*************************************************************************//*!
				@brief			テクスチャの生成
				@param[in]		w			幅
				@param[in]		h			高さ
				@param[in]		Format		フォーマット
				@param[in]		Usage		管理方法
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Create(const MofU32 w, const MofU32 h, const PixelFormat Format, const BufferAccess Usage);
		/*************************************************************************//*!
				@brief			テクスチャの生成
				@param[in]		w			幅
				@param[in]		h			高さ
				@param[in]		Format		フォーマット
				@param[in]		Usage		管理方法
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool CreateTarget(const MofU32 w, const MofU32 h, const PixelFormat Format, const BufferAccess Usage);
		
		/*************************************************************************//*!
				@brief			テクスチャのコピー生成
				@param			None
				
				@return			作成されたコピーテクスチャ<br>
								作成に失敗した場合NULLを返す
		*//**************************************************************************/
		virtual ITexture* CreateCopyObject(void) const;
		
		/*************************************************************************//*!
				@brief			バッファのマップ
				@param[in]		mt				マップタイプ
				
				@return			マップされたメモリアドレスを返す。<br>
								失敗の場合NULLになる。
		*//**************************************************************************/
		virtual LPMofVoid Map(MofU32 mt);
		/*************************************************************************//*!
				@brief			バッファのアンマップ
				@param			None
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool UnMap(void);

		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);
		
		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			テクスチャ取得
				@param			None

				@return			テクスチャ
		*//**************************************************************************/
		virtual MofTexture GetTexture(void);
		/*************************************************************************//*!
				@brief			テクスチャ取得
				@param			None

				@return			テクスチャ
		*//**************************************************************************/
		virtual MofTextureHandle GetTextureHandle(void);
		/*************************************************************************//*!
				@brief			テクスチャへ描画するための描画ターゲットを取得
				@param			None
				
				@return			描画ターゲットを返す。
								失敗の場合NULLになる。
		*//**************************************************************************/
		virtual LPRenderTarget GetRenderTarget(void);

		//クラス基本定義
		MOF_LIBRARYCLASS(CGLTexture,MOF_GLTEXTURECLASS_ID);
	};

	#include	"GLTexture.inl"
	
	//置き換え
	typedef CGLTexture		CTexture;

}

#endif

//[EOF]
