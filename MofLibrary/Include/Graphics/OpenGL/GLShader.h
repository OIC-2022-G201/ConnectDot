/*************************************************************************//*!
					
					@file	GLShader.cpp
					@brief	OpenGLシェーダークラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__GLSHADER__H__

#define		__GLSHADER__H__

//INCLUDE
#include	"../ShaderBase.h"

namespace Mof {
	
	/*******************************//*!
	@brief	OpenGLシェーダークラス

			OpenGLでのシェーダー読み込み、設定を行うクラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CGLShader : public CShaderBase {
	protected:
		/*******************//*!
		頂点シェーダー
		*//********************/
		GLuint					m_VertexShader;
		/*******************//*!
		ピクセルシェーダー
		*//********************/
		GLuint					m_PixelShader;
		/*******************//*!
		シェーダー
		*//********************/
		GLuint					m_Shader;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CGLShader();
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param			pObj		コピーシェーダー

				@return			None
		*//**************************************************************************/
		CGLShader(const CGLShader& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CGLShader();

		/*************************************************************************//*!
				@brief			シェーダーの読み込み<br>
								ファイル指定でのシェーダー読み込み。<br>
								ファイル内部に[ファイル名_VS]で頂点シェーダーが[ファイル名_PS]でピクセルシェーダーが定義されていること。
				@param[in]		pName		ファイル名
				@param[in]		Flags		読み込みフラグ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPCMofChar pName,MofU32 Flags = 0);
		/*************************************************************************//*!
				@brief			シェーダーの読み込み<br>
								メモリ指定でのシェーダー読み込み。<br>
								メモリ内部に[ファイル名_VS]で頂点シェーダーが[ファイル名_PS]でピクセルシェーダーが定義されていること。
				@param[in]		pS			シェーダー
				@param[in]		SSize		シェーダーサイズ
				@param[in]		Flags		読み込みフラグ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPMofVoid pS,MofU32 SSize,MofU32 Flags = 0);
		/*************************************************************************//*!
				@brief			シェーダーの読み込み<br>
								頂点シェーダー、ピクセルシェーダー個別読み込み
				@param[in]		pName		ファイル名
				@param[in]		Flags		読み込みフラグ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPCMofChar pVName,LPCMofChar pPName,MofU32 Flags = 0);
		/*************************************************************************//*!
				@brief			シェーダーの読み込み<br>
								頂点シェーダー、ピクセルシェーダーを渡すことで生成
				@param[in]		pVS			頂点シェーダー
				@param[in]		VSSize		頂点シェーダーサイズ
				@param[in]		pPS			ピクセルシェーダー
				@param[in]		PSSize		ピクセルシェーダーサイズ
				@param[in]		Flags		読み込みフラグ

				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPMofVoid pVS,MofU32 VSSize,LPMofVoid pPS,MofU32 PSSize,MofU32 Flags = 0);
		
		/*************************************************************************//*!
				@brief			コンパイル済みシェーダーの生成<br>
								ファイル指定でのシェーダー読み込み。<br>
								ファイル内部に[ファイル名_VS]で頂点シェーダーが[ファイル名_PS]でピクセルシェーダーが定義されていること。
				@param[in]		pName		ファイル名
				@param[in]		Flags		読み込みフラグ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Create(LPCMofChar pName,MofU32 Flags = 0);
		/*************************************************************************//*!
				@brief			コンパイル済みシェーダーの生成<br>
								メモリ指定でのシェーダー読み込み。<br>
								メモリ内部に[ファイル名_VS]で頂点シェーダーが[ファイル名_PS]でピクセルシェーダーが定義されていること。
				@param[in]		pS			シェーダー
				@param[in]		SSize		シェーダーサイズ
				@param[in]		Flags		読み込みフラグ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Create(LPMofVoid pS, MofU32 SSize, MofU32 Flags = 0);
		/*************************************************************************//*!
				@brief			シェーダーの生成<br>
								頂点シェーダー、ピクセルシェーダー個別読み込み
				@param[in]		pName		ファイル名
				@param[in]		Flags		読み込みフラグ

				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Create(LPCMofChar pVName,LPCMofChar pPName,MofU32 Flags = 0);
		/*************************************************************************//*!
				@brief			シェーダーの生成<br>
								頂点シェーダー、ピクセルシェーダーを渡すことで生成
				@param[in]		pVS			頂点シェーダー
				@param[in]		VSSize		頂点シェーダーサイズ
				@param[in]		pPS			ピクセルシェーダー
				@param[in]		PSSize		ピクセルシェーダーサイズ
				@param[in]		Flags		読み込みフラグ

				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Create(LPMofVoid pVS,MofU32 VSSize,LPMofVoid pPS,MofU32 PSSize,MofU32 Flags = 0);

		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);
		
		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			シェーダーの取得
				@param			None

				@return			シェーダー
		*//**************************************************************************/
		virtual MofShaderEffect GetShader(void);
		/*************************************************************************//*!
				@brief			シェーダーの取得
				@param			None

				@return			シェーダー
		*//**************************************************************************/
		virtual MofVertexShader GetVertexShader(void);
		/*************************************************************************//*!
				@brief			シェーダーの取得
				@param			None

				@return			シェーダー
		*//**************************************************************************/
		virtual MofPixelShader GetPixelShader(void);

		//クラス基本定義
		MOF_LIBRARYCLASS(CGLShader,MOF_GLSHADERCLASS_ID);
	};

	#include	"GLShader.inl"
	
	//置き換え
	typedef CGLShader		CShader;
}

#endif

//[EOF]
