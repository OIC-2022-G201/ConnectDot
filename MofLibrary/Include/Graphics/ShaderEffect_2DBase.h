/*************************************************************************//*!
					
					@file	ShaderEffect_2DBase.h
					@brief	2D用シェーダー効果基底クラス。

															@author	CDW
															@date	2015.04.22
*//**************************************************************************/

//ONCE
#ifndef		__SHADEREFFECT_2DBASE__H__

#define		__SHADEREFFECT_2DBASE__H__

//INCLUDE
#include	"ShaderEffect.h"
#include	"ShaderBindBase.h"

namespace Mof {
	
	/*******************************//*!
	@brief	2D用シェーダー効果基底クラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CShaderEffect_2DBase : public IShaderEffect {
	protected:
		/*******************//*!
		シェーダー
		*//********************/
		LPShader		m_pShader;
		/*******************//*!
		シェーダーバインド
		*//********************/
		LPShaderBind	m_pShaderBind;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CShaderEffect_2DBase();
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CShaderEffect_2DBase();
		
		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);
		
		/*************************************************************************//*!
		@brief			テクスチャの描画
		@param[in]		px			描画X座標
		@param[in]		py			描画Y座標
		@param[in]		col			描画色
		@param[in]		Alignment	アライメント（TextureAlignmentからフラグの組み合わせで指定）
		@param[in]		pTex		テクスチャ
				
		@return			TRUE		成功<br>
						それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Render(MofFloat px,MofFloat py,MofU32 col,TextureAlignment Alignment,LPTexture pTex);
		/*************************************************************************//*!
		@brief			テクスチャの描画
		@param[in]		px			描画X座標
		@param[in]		py			描画Y座標
		@param[in]		pTex		テクスチャ
				
		@return			TRUE		成功<br>
						それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Render(MofFloat px,MofFloat py,LPTexture pTex);
		/*************************************************************************//*!
		@brief			テクスチャの描画
		@param[in]		pTarget		描画ターゲット
		@param[in]		pTex		テクスチャ
				
		@return			TRUE		成功<br>
						それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Render(LPRenderTarget pTarget,LPTexture pTex);
		/*************************************************************************//*!
		@brief			テクスチャの描画
		@param[in]		pTarget		描画ターゲットのテクスチャ
		@param[in]		pTex		テクスチャ
				
		@return			TRUE		成功<br>
						それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Render(LPTexture pTarget,LPTexture pTex);

		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			シェーダーの取得
				@param			None
				
				@return			シェーダーを返す。
								失敗の場合NULLになる。
		*//**************************************************************************/
		virtual LPShader GetShader(void);
		/*************************************************************************//*!
				@brief			シェーダーバインドの取得
				@param			None
				
				@return			シェーダーバインドを返す。
								失敗の場合NULLになる。
		*//**************************************************************************/
		virtual LPShaderBind GetShaderBind(void);

	};

	// 置き換え
	typedef CShaderEffect_2DBase*			LPShaderEffect_2DBase;

#include	"ShaderEffect_2DBase.inl"

}

#endif

//[EOF]