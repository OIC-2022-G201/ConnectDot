/*************************************************************************//*!
					
					@file	MeshContainerBase.h
					@brief	メッシュコンテナ基底クラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__MESHCONTAINERBASE__H__

#define		__MESHCONTAINERBASE__H__

//INCLUDE
#include	"MeshContainer.h"

namespace Mof {
	
	/*******************************//*!
	@brief	メッシュコンテナ基底クラス

			メッシュコンテナ基底クラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CMeshContainerBase : public IMeshContainer {
	protected:
		/*******************//*!
		名前
		*//********************/
		CString						m_Name;
		/*******************//*!
		メッシュ
		*//********************/
		LPMeshArray					m_pMesh;
		/*******************//*!
		ボーン
		*//********************/
		LPBoneArray					m_pBone;
		/*******************//*!
		アニメーション
		*//********************/
		LPMeshAnimationArray		m_pAnimation;
		/*******************//*!
		剛体情報
		*//********************/
		LPPhysicsActorInfoArray		m_pRigid;
		/*******************//*!
		ジョイント情報
		*//********************/
		LPPhysicsJointInfoArray		m_pJoint;
		/*******************//*!
		カメラ
		*//********************/
		LPMeshCameraArray			m_pCamera;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CMeshContainerBase();
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param[in]		pObj		コピージオメトリ

				@return			None
		*//**************************************************************************/
		CMeshContainerBase(const CMeshContainerBase& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CMeshContainerBase();
		
		/*************************************************************************//*!
				@brief			メッシュの読み込み
				@param[in]		pName		ファイル名
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPCMofChar pName);
		/*************************************************************************//*!
				@brief			メッシュの読み込み<br>
								メッシュ内部で利用するテクスチャを引数のテクスチャ配列「pTex」から検索をおこなう。<br>
								存在しない場合新規読み込みをおこない、テクスチャ配列に追加する。<br>
								別メッシュで同一テクスチャを複数使用する場合のメモリ節約に活用する。
				@param[in]		pName		ファイル名
				@param[in]		pTex		テクスチャ検索用配列
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPCMofChar pName,LPTextureArray pTex);
		/*************************************************************************//*!
				@brief			メモリからメッシュの読み込み
				@param[in]		pName		名前
				@param[in]		pData		メモリアドレス
				@param[in]		Size		サイズ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPCMofChar pName,LPMofVoid pData,MofU32 Size);
		/*************************************************************************//*!
				@brief			メモリからメッシュの読み込み<br>
								メッシュ内部で利用するテクスチャを引数のテクスチャ配列「pTex」から検索をおこなう。<br>
								存在しない場合新規読み込みをおこない、テクスチャ配列に追加する。<br>
								別メッシュで同一テクスチャを複数使用する場合のメモリ節約に活用する。
				@param[in]		pName		名前
				@param[in]		pData		メモリアドレス
				@param[in]		Size		サイズ
				@param[in]		pTex		テクスチャ検索用配列
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPCMofChar pName,LPMofVoid pData,MofU32 Size,LPTextureArray pTex);
		
		/*************************************************************************//*!
				@brief			メッシュの保存
				@param[in]		pName		ファイル名
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Save(const LPMofChar pName);

		/*************************************************************************//*!
				@brief			モーションコントローラーの作成<br>
								内部にボーン情報やアニメーション情報がない場合失敗する
				@param			None
				
				@return			作成したモーションコントローラー<br>
								NULLの場合作成失敗
		*//**************************************************************************/
		virtual LPMeshMotionController CreateMotionController(void);
		
		/*************************************************************************//*!
				@brief			基本描画
				@param[in]		pos				座標
				@param[in]		scl				スケール
				@param[in]		rot				回転
				
				@return			TRUE			正常終了<br>
								それ以外			解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(const Vector3& pos, const Vector3& scl, const Vector3& rot);
		/*************************************************************************//*!
				@brief			基本描画
				@param[in]		wMat			変換行列
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(const Matrix44& wMat);
		/*************************************************************************//*!
				@brief			基本描画
				@param[in]		wMat			変換行列
				@param[in]		col				色補正
				
				@return			TRUE			正常終了<br>
								それ以外			解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(const Matrix44& wMat,const Vector4& col);
		/*************************************************************************//*!
				@brief			基本描画
				@param[in]		wMat			変換行列
				@param[in]		col				色補正
				@param[in]		uv				UV補正
				
				@return			TRUE			正常終了<br>
								それ以外			解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(const Matrix44& wMat,const Vector4& col,const Vector2& uv);
		/*************************************************************************//*!
				@brief			アニメーション描画
				@param[in]		pMotion			モーションコントローラ
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(LPMeshMotionController pMotion);
		/*************************************************************************//*!
				@brief			アニメーション描画
				@param[in]		pMotion			モーションコントローラ
				@param[in]		col				色補正
				
				@return			TRUE			正常終了<br>
								それ以外			解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(LPMeshMotionController pMotion,const Vector4& col);
		/*************************************************************************//*!
				@brief			アニメーション描画
				@param[in]		pMotion			モーションコントローラ
				@param[in]		col				色補正
				@param[in]		uv				UV補正
				
				@return			TRUE			正常終了<br>
								それ以外			解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(LPMeshMotionController pMotion,const Vector4& col,const Vector2& uv);
		
		/*************************************************************************//*!
				@brief			基本描画
				@param[in]		wMat			変換行列
				@param[in]		pShader			シェーダー
				@param[in]		pShaderBind		シェーダーバインド
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(const Matrix44& wMat, LPShader pShader, LPShaderBind pShaderBind);
		/*************************************************************************//*!
				@brief			基本描画
				@param[in]		wMat			変換行列
				@param[in]		col				色補正
				@param[in]		pShader			シェーダー
				@param[in]		pShaderBind		シェーダーバインド
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(const Matrix44& wMat, const Vector4& col, LPShader pShader, LPShaderBind pShaderBind);
		/*************************************************************************//*!
				@brief			基本描画
				@param[in]		wMat			変換行列
				@param[in]		col				色補正
				@param[in]		uv				UV補正
				@param[in]		pShader			シェーダー
				@param[in]		pShaderBind		シェーダーバインド
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(const Matrix44& wMat, const Vector4& col, const Vector2& uv, LPShader pShader, LPShaderBind pShaderBind);
		/*************************************************************************//*!
				@brief			アニメーション描画
				@param[in]		pMotion			モーションコントローラ
				@param[in]		pShader			シェーダー
				@param[in]		pShaderBind		シェーダーバインド
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(LPMeshMotionController pMotion, LPShader pShader, LPShaderBind pShaderBind);
		/*************************************************************************//*!
				@brief			アニメーション描画
				@param[in]		pMotion			モーションコントローラ
				@param[in]		col				色補正
				@param[in]		pShader			シェーダー
				@param[in]		pShaderBind		シェーダーバインド
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(LPMeshMotionController pMotion, const Vector4& col, LPShader pShader, LPShaderBind pShaderBind);
		/*************************************************************************//*!
				@brief			アニメーション描画
				@param[in]		pMotion			モーションコントローラ
				@param[in]		col				色補正
				@param[in]		uv				UV補正
				@param[in]		pShader			シェーダー
				@param[in]		pShaderBind		シェーダーバインド
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(LPMeshMotionController pMotion, const Vector4& col, const Vector2& uv, LPShader pShader, LPShaderBind pShaderBind);
		
		/*************************************************************************//*!
				@brief			カメラ状態の計算
				@param[in]		pCam		適用カメラ
				@param[in]		t			アニメーション時間
				@param[in]		bLoop		ループ
				@param[in]		pAnim		アニメーション名
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool CalculateCamera(LPCamera pCam, MofFloat t, MofBool bLoop, LPCMofChar pAnim);

		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);
		
		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前設定
				@param[in]		pName			設定する名前
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetName(LPCMofChar pName);

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前取得
				@param			None

				@return			名前の取得
		*//**************************************************************************/
		virtual LPString GetName(void);
		/*************************************************************************//*!
				@brief			メッシュリスト取得
				@param			None

				@return			メッシュリスト
		*//**************************************************************************/
		virtual LPMeshArray GetMesh(void);
		/*************************************************************************//*!
				@brief			メッシュ登録数取得
				@param			None

				@return			メッシュ登録数
		*//**************************************************************************/
		virtual MofU32 GetMeshCount(void) const;
		/*************************************************************************//*!
				@brief			メッシュ取得
				@param[in]		pName			メッシュ番号

				@return			メッシュ
								見つからなかった場合NULLを返す
		*//**************************************************************************/
		virtual LPMesh GetMesh(MofU32 No);
		/*************************************************************************//*!
				@brief			メッシュ取得
				@param[in]		pName			探すメッシュ名

				@return			メッシュ
								見つからなかった場合NULLを返す
		*//**************************************************************************/
		virtual LPMesh GetMesh(LPCMofChar pName);
		/*************************************************************************//*!
				@brief			ジオメトリ登録数取得
				@param			None

				@return			ジオメトリ登録数
		*//**************************************************************************/
		virtual MofU32 GetGeometryCount(void) const;
		/*************************************************************************//*!
				@brief			ジオメトリ取得
				@param[in]		No				ジオメトリ番号

				@return			ジオメトリ
								見つからなかった場合NULLを返す
		*//**************************************************************************/
		virtual LPGeometry GetGeometry(MofU32 No);
		/*************************************************************************//*!
				@brief			ジオメトリ取得
				@param[in]		pName			探すジオメトリ名

				@return			ジオメトリ
								見つからなかった場合NULLを返す
		*//**************************************************************************/
		virtual LPGeometry GetGeometryByName(LPCMofChar pName);
		/*************************************************************************//*!
				@brief			ボーンリスト取得
				@param			None

				@return			ボーンリスト
		*//**************************************************************************/
		virtual LPBoneArray GetBone(void);
		/*************************************************************************//*!
				@brief			メッシュアニメーションリスト取得
				@param			None

				@return			メッシュアニメーションリスト
		*//**************************************************************************/
		virtual LPMeshAnimationArray GetAnimation(void);
		/*************************************************************************//*!
				@brief			剛体情報リスト取得
				@param			None

				@return			剛体情報リスト
		*//**************************************************************************/
		virtual LPPhysicsActorInfoArray GetRigidInfo(void);
		/*************************************************************************//*!
				@brief			ジョイント情報リスト取得
				@param			None

				@return			ジョイント情報リスト
		*//**************************************************************************/
		virtual LPPhysicsJointInfoArray GetJointInfo(void);
		/*************************************************************************//*!
				@brief			カメラリスト取得
				@param			None

				@return			カメラリスト
		*//**************************************************************************/
		virtual LPMeshCameraArray GetCamera(void);
		/*************************************************************************//*!
				@brief			カメラ取得
				@param[in]		pName			探すカメラ名

				@return			カメラ
								見つからなかった場合NULLを返す
		*//**************************************************************************/
		virtual LPMeshCamera GetCamera(LPCMofChar pName);
	};
	
	#include	"MeshContainerBase.inl"
}

#endif	//__MESHBASE__H__

//[EOF]
