/*************************************************************************//*!
					
					@file	Sprite2DPart.h
					@brief	スプライトパーツクラス。<br>
							スプライトコンテナの内部配置用スプライトとして使用

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__SPRITE2DPART__H__

#define		__SPRITE2DPART__H__

//INCLUDE
#include	"Sprite2D.h"
#include	"MosCommon.h"

namespace Mof {
	
	//前方定義（内部での親保持のため）
	class CSprite2DPart;
	typedef CSprite2DPart*			LPSprite2DPart;
	typedef CDynamicArray< LPSprite2DPart >		CSprite2DPartArray,*LPSprite2DPartArray;

	/*******************************//*!
	@brief	スプライトパーツクラス

			スプライトパーツクラス。<br>
			スプライトコンテナの内部配置用スプライトとして使用

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CSprite2DPart : public CSprite2D {
		//----------------------------------------------------------------------------
		////前ライブラリとの対応のためにも一般パラメーターをpublic対応にしておく
		//----------------------------------------------------------------------------
	public:
		/*******************//*!
		ID
		*//********************/
		MofU32							m_ID;
		/*******************//*!
		親スプライト
		*//********************/
		LPSprite2DPart					m_pParent;
		/*******************//*!
		内部スプライト
		*//********************/
		LPSprite2DPartArray				m_pChild;
		/*******************//*!
		スプライト管理タイプ
		*//********************/
		SpriteType						m_Type;
		/*******************//*!
		階層
		*//********************/
		MofS32							m_Hierarchy;
		/*******************//*!
		プライオリティ
		*//********************/
		MofS32							m_Priority;
		/*******************//*!
		パーツ座標(最終座標は親の情報×自分のパーツ情報で設定される)
		*//********************/
		CVector3						m_PartPosition;
		/*******************//*!
		パーツスケール(最終スケールは親の情報×自分のパーツ情報で設定される)
		*//********************/
		CVector3						m_PartScale;
		/*******************//*!
		パーツ回転角度(最終回転角度は親の情報×自分のパーツ情報で設定される)
		*//********************/
		CVector3						m_PartAngle;
		/*******************//*!
		パーツアライメント座標
		*//********************/
		CVector3						m_PartAlignmentOffset;
		/*******************//*!
		反転フラグ
		*//********************/
		TextureReverse					m_PartReverse;
		/*******************//*!
		パーツサイズ
		*//********************/
		CVector3						m_PartSize;
		/*******************//*!
		頂点
		*//********************/
		CVector2						m_Vertex[4];
		/*******************//*!
		頂点カラー
		*//********************/
		CVector4						m_VertexColor[4];
		/*******************//*!
		頂点カラー
		*//********************/
		MofFloat						m_VertexColorRate;
		/*******************//*!
		UV座標
		*//********************/
		CVector2						m_UVPos;
		/*******************//*!
		UVスケール
		*//********************/
		CVector2						m_UVScale;
		/*******************//*!
		UV回転
		*//********************/
		MofFloat						m_UVAngle;
		/*******************//*!
		内部モーション管理時間
		*//********************/
		MofFloat						m_NowTime;
		/*******************//*!
		内部モーション管理時間
		*//********************/
		MofFloat						m_EffectTime;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CSprite2DPart();
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param[in]		pObj		コピーテクスチャ

				@return			None
		*//**************************************************************************/
		CSprite2DPart(const CSprite2DPart& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CSprite2DPart();
		
		/*************************************************************************//*!
				@brief			テクスチャのコピー生成
				@param			None
				
				@return			作成されたコピーテクスチャ<br>
								作成に失敗した場合NULLを返す
		*//**************************************************************************/
		virtual ISprite* CreateCopyObject(void) const;

		/*************************************************************************//*!
				@brief			スプライトの更新
				@param			None

				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Update(void);
		
		/*************************************************************************//*!
				@brief			スプライトの描画
				@param			None

				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Render(void);
		/*************************************************************************//*!
				@brief			スプライトの描画<br>
								下の階層まで描画を行わず自分のみの描画を行う
				@param			None

				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool RenderPart(void);
		
		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);
		
		/*************************************************************************//*!
				@brief			現在のモーションが終了しているかを判定する。<br>
								モーションがループする場合はTRUEになることはない
				@param			None
				
				@return			TRUE			終了済み<br>
								FALE			まだ終了していない
		*//**************************************************************************/
		virtual MofBool IsEndMotion(void);
		
		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			子供配列取得
				@param			None

				@return			子供配列
		*//**************************************************************************/
		virtual LPSprite2DPartArray GetChild(void);

		//クラス基本定義
		MOF_LIBRARYCLASS(CSprite2DPart,MOF_SPRITE2DPARTCLASS_ID);
	};

	#include	"Sprite2DPart.inl"
}

#endif

//[EOF]