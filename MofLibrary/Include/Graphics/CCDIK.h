/*****************************************************************************
					
					［ファイル名］	CCDIK.h
					［処理概要］	CCDIKクラス
					
															@author	CDW
															@date	2014.05.14
*****************************************************************************/

//ONCE
#ifndef		__CCDIK__H__

#define		__CCDIK__H__

//INCLUDE
#include	"CCDJoint.h"

namespace Mof {

	//CLASS
	
	/*******************************//*!
	@brief	IK用クラス

			IK用クラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CCCDIK : public IMofNamedObject {
	protected:
		/*******************//*!
		設定
		*//********************/
		BONEIKINFO							m_Info;
		/*******************//*!
		ルート
		*//********************/
		LPCCDJoint							m_pRoot;
		/*******************//*!
		エフェクタ
		*//********************/
		LPCCDJoint							m_pEffector;
		/*******************//*!
		ターゲット
		*//********************/
		LPCCDJoint							m_pTarget;
		/*******************//*!
		ターゲット位置
		*//********************/
		CVector3							m_TargetPos;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ<br>
								全てのパラメーターをデフォルトで作成する。
				@param			None

				@return			None
		*//**************************************************************************/
		CCCDIK();
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param[in]		Info			設定情報
				@param[in]		pRoot			ルート
				@param[in]		pEfc			エフェクタ
				@param[in]		pTar			ターゲット

				@return			None
		*//**************************************************************************/
		CCCDIK(BONEIKINFO& Info, LPCCDJoint pRoot, LPCCDJoint pEfc, LPCCDJoint pTar);
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param[in]		pObj		コピーボーン

				@return			None
		*//**************************************************************************/
		CCCDIK(const CCCDIK& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CCCDIK();

		/*************************************************************************//*!
				@brief			ＩＫ行列の更新
				@param			None
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool CalculationIK(void);
		/*************************************************************************//*!
				@brief			ＩＫ行列の更新
				@param[in]		Target			ターゲット
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool CalculationIK(Vector3& Target);
		/*************************************************************************//*!
				@brief			角度のクリッピング
				@param[in]		v				角度
				@param[in]		l				最小
				@param[in]		h				最大
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool CalculationClpping(Vector3& v, Vector3& l, Vector3& h);
		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);
		
		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前設定
				@param[in]		pName			設定する名前
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetName(LPCMofChar pName);
		/*************************************************************************//*!
				@brief			位置設定
				@param[in]		p				位置
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		MofBool SetTargetPosition(Vector3& p);
		/*************************************************************************//*!
				@brief			位置設定
				@param[in]		p				位置
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		MofBool SetTargetPosition(Matrix44& p);
		
		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前取得
				@param			None

				@return			名前の取得
		*//**************************************************************************/
		virtual LPString GetName(void);
		/*************************************************************************//*!
				@brief			ルート取得
				@param			None

				@return			ルート
		*//**************************************************************************/
		LPCCDJoint GetRoot(void);
		/*************************************************************************//*!
				@brief			エフェクタ取得
				@param			None

				@return			エフェクタ
		*//**************************************************************************/
		LPCCDJoint GetEffector(void);
		/*************************************************************************//*!
				@brief			ターゲット取得
				@param			None

				@return			ターゲット
		*//**************************************************************************/
		LPCCDJoint GetTarget(void);
		/*************************************************************************//*!
				@brief			子取得
				@param[in]		pName		名前

				@return			子
		*//**************************************************************************/
		LPCCDJoint GetJoint(LPCMofChar pName);
		/*************************************************************************//*!
				@brief			ターゲット位置取得
				@param			None

				@return			ターゲット位置
		*//**************************************************************************/
		CVector3& GetTargetPosition(void);
		/*************************************************************************//*!
				@brief			反復回数取得
				@param			None

				@return			反復回数
		*//**************************************************************************/
		MofS32 GetMaxIteration(void);
		/*************************************************************************//*!
				@brief			許容誤差取得
				@param			None

				@return			許容誤差
		*//**************************************************************************/
		MofFloat GetTolerance(void);
		
		//クラス基本定義
		MOF_LIBRARYCLASS(CCCDIK, MOF_CCDIKCLASS_ID);
	};

	//TYPEDEF
	typedef CCCDIK* LPCCDIK;
	//リスト置き換え
	typedef CDynamicArray< LPCCDIK > CCCDIKArray, *LPCCDIKArray;

	//INLINE INCLUDE
	#include	"CCDIK.inl"

}

#endif		//__CCDIK__H__

//[EOF]