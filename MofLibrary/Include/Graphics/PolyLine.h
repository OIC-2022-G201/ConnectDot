/*************************************************************************//*!
					
					@file	PolyLine.h
					@brief	ポリラインジオメトリ。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__POLILINE__H__

#define		__POLILINE__H__

//INCLUDE
#include	"GraphicsPlatform.h"

namespace Mof {
	
	/*******************************//*!
	@brief	ポリライン用ポイント情報

			ポリライン用ポイント情報構造体

	@author	CDW
	*//********************************/
	typedef MOF_ALIGNED16_STRUCT tag_POLYLINEPOINT {
		CVector3				Position;
		MofFloat				Width;
		CVector4				Color;
		
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		tag_POLYLINEPOINT() :
		Position(),
		Width(1.0f),
		Color(1.0f, 1.0f, 1.0f, 1.0f) {
		}

		MOF_ALIGNED_NEW_OPERATOR(tag_POLYLINEPOINT);
	}POLYLINEPOINT, *LPPOLYLINEPOINT;
	typedef CDynamicArray< POLYLINEPOINT > CPolyLinePointArray, *LPPolyLinePointArray;

	/*******************************//*!
	@brief	ポリラインジオメトリ

			ポリラインジオメトリ

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CPolyLine : public CGeometry {
	protected:
		/*******************//*!
		ポイント配列
		*//********************/
		LPPolyLinePointArray				m_pPointArray;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CPolyLine();
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CPolyLine();

		/*************************************************************************//*!
				@brief			作成
				@param[in]		d				分割
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Create(MofU32 d);
		
		/*************************************************************************//*!
				@brief			更新
				@param[in]		p				座標
				@param[in]		w				幅
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool UpdatePoint(const CVector3& p,const MofFloat w);
		
		/*************************************************************************//*!
				@brief			更新
				@param			None
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool UpdateGeometry(void);
		/*************************************************************************//*!
				@brief			更新
				@param[in]		cpos			カメラ位置
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool UpdateGeometry(CVector3& cpos);
		
		/*************************************************************************//*!
				@brief			基本描画
				@param[in]		col				色補正
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(const Vector4& col);
		/*************************************************************************//*!
				@brief			基本描画
				@param[in]		col				色補正
				@param[in]		pShader			シェーダー
				@param[in]		pShaderBind		シェーダーバインド
				
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Render(const Vector4& col, LPShader pShader, LPShaderBind pShaderBind);

		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);

		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			設定
				@param[in]		p				座標
				@param[in]		w				幅
				
				@return			TRUE			正常終了<br>
								それ以外		エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetPoint(const CVector3& p,const MofFloat w);

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			先頭座標取得
				@param			None

				@return			先頭座標
		*//**************************************************************************/
		virtual CVector3& GetFirstPosition(void);
		/*************************************************************************//*!
				@brief			終端座標取得
				@param			None

				@return			終端座標
		*//**************************************************************************/
		virtual CVector3& GetLastPosition(void);
	};

	//ポインタ置き換え
	typedef CPolyLine*		LPPolyLine;

	#include	"PolyLine.inl"
}

#endif

//[EOF]