/*************************************************************************//*!
					
					@file	ImeProc.h
					@brief	IME処理プロシージャー。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__IMEPROC__H__

#define		__IMEPROC__H__

//LIBRARY
#pragma comment(lib,"imm32.lib")

//INCLUDE
#include	"DefWindowProc.h"
#include	<imm.h>

namespace Mof {
	/*******************************//*!
	@brief	ウインドウプロシージャ、IME関連メッセージ処理クラス

			ウインドウのメッセージ処理を行う基本メッセージ処理クラスに<br>
			IME関連の処理を追加したクラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CImeProc : public CDefWindowProc {
	protected:
		/*******************//*!
		IME入力
		*//********************/
		static CImeProc*		m_pImeProc;
		/*******************//*!
		入力リスト文字列
		*//********************/
		CString					m_ListString;
		/*******************//*!
		入力リスト数
		*//********************/
		MofU32					m_ListCount;
		/*******************//*!
		入力リスト内の数
		*//********************/
		MofU32					m_ListStringCount;
		/*******************//*!
		リストインデックス
		*//********************/
		LPMofU32				m_pListIndex;
		/*******************//*!
		IME文字列
		*//********************/
		CString					m_ImeString;
		/*******************//*!
		入力文字列
		*//********************/
		CString					m_InputString;
		/*******************//*!
		確定文字列
		*//********************/
		CString					m_EnterString;
		/*******************//*!
		有効フラグ
		*//********************/
		MofBool					m_bEnable;
		/*******************//*!
		挿入ポイント
		*//********************/
		MofS32					m_InsertPoint;
		/*******************//*!
		ブロック選択
		*//********************/
		MofU32					m_BlockSelect;
		/*******************//*!
		ブロック数
		*//********************/
		MofU32					m_BlockCount;
		/*******************//*!
		ブロックサイズ
		*//********************/
		MofU32					m_BlockSize;
		/*******************//*!
		ブロックインデックス
		*//********************/
		LPMofU32				m_pBlockIndex;
	
		/*************************************************************************//*!
				@brief			押されたキーに対して処理をおこなうキーコードに変更する
				@param[in]		key			押されたキーコード
				
				@return			押されたキーコード
		*//**************************************************************************/
		int Key(unsigned int key);
		/*************************************************************************//*!
				@brief			押されたキーに対してShiftキーを押しながら処理をおこなうキーコードに変更する
				@param[in]		key			押されたキーコード
				
				@return			押されたキーコード
		*//**************************************************************************/
		int KeyShift(unsigned int key);
		/*************************************************************************//*!
				@brief			Nofityメッセージ処理
				@param[in]		hWnd		ウインドウハンドル
				@param[in]		wpar		パラメーター１
				@param[in]		lpar		パラメーター２
				
				@return			0
		*//**************************************************************************/
		MofProcResult Nofity(MofWindowHandle hWnd, MofProcParamW wpar, MofProcParamL lpar);
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CImeProc();
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param[in]		pWnd		ウインドウ

				@return			None
		*//**************************************************************************/
		CImeProc(LPWindow pWnd);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CImeProc();
		/*************************************************************************//*!
				@brief			入力確定文字列の初期化
				@param			None
			
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool ResetEnterString(void);
		/*************************************************************************//*!
				@brief			入力状態の初期化
				@param			None
			
				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool ResetInput(void);
		/*************************************************************************//*!
				@brief			IMEコンテキストの設定
				@param[in]		lpar		パラメーター
				
				@return			0
		*//**************************************************************************/
		MofProcResult SetContext(MofProcParamL lpar);

		/*************************************************************************//*!
				@brief			IME変換の開始
				@param			None
				
				@return			0
		*//**************************************************************************/
		MofProcResult StartComposition();
		/*************************************************************************//*!
				@brief			IME変換処理
				@param[in]		hWnd		ウインドウハンドル
				@param[in]		lpar		パラメーター
				
				@return			0
		*//**************************************************************************/
		MofProcResult Composition(MofWindowHandle hWnd, MofProcParamL lpar);
		/*************************************************************************//*!
				@brief			IME変換の終了
				@param			None
				
				@return			0
		*//**************************************************************************/
		MofProcResult EndComposition();
		/*************************************************************************//*!
				@brief			IME変換リスト文字列の作成
				@param[in]		hWnd		ウインドウハンドル
				
				@return			0
		*//**************************************************************************/
		MofProcResult CreateListString(MofWindowHandle hWnd);
		/*************************************************************************//*!
				@brief			IME変換リスト文字列の作成
				@param[in]		index		作成インデックス
				@param[in]		lpcdl		作成用変換リスト
				
				@return			None
		*//**************************************************************************/
		void CreateListString(MofU32 index, LPCANDIDATELIST lpcdl);
	
		/*************************************************************************//*!
				@brief			入力カーソルの移動
				@param[in]		mv			移動量
				
				@return			TRUE		正常終了<br>
								それ以外	エラーコードを返す。
		*//**************************************************************************/
		MofBool Move(MofS32 mv);
	
		/*************************************************************************//*!
				@brief			キーダウンメッセージ内部処理
				@param[in]		key			押されたキーコード
				
				@return			TRUE		正常終了<br>
								それ以外	エラーコードを返す。
		*//**************************************************************************/
		MofBool KeyDown(MofU32 key);
		/*************************************************************************//*!
				@brief			キーダウンメッセージ
				@param[in]		hWnd		ウインドウハンドル
				@param[in]		wpar		パラメーター１
				@param[in]		lpar		パラメーター２
				
				@return			0
		*//**************************************************************************/
		MofProcResult KeyDown(MofWindowHandle hWnd, MofProcParamW wpar, MofProcParamL lpar);
		/*************************************************************************//*!
				@brief			コールされるプロシージャ
				@param[in]		hWnd		ウインドウハンドル
				@param[in]		msg			メッセージ
				@param[in]		wpar		パラメーター１
				@param[in]		lpar		パラメーター２
				
				@return			内部でメッセージ処理を行った場合その結果を、<br>
								それ以外はDefWindowProc関数を参照。
		*//**************************************************************************/
		virtual MofProcResult WindowProc(MofWindowHandle hWnd, MofUInt msg, MofProcParamW wpar, MofProcParamL lpar);
	
		/*************************************************************************//*!
				@brief			入力文字列の設定
				@param[in]		str			設定文字列
			
				@return			TRUE		正常終了<br>
								それ以外	解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetInputString(LPCMofChar str);
		/*************************************************************************//*!
				@brief			有効フラグの設定
				@param[in]		be			設定フラグ
			
				@return			TRUE		正常終了<br>
								それ以外	解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetEnable(MofBool be);

		/*************************************************************************//*!
				@brief			IME変換リスト文字列の取得
				@param			None

				@return			IME変換リスト文字列
		*//**************************************************************************/
		virtual LPString GetListString(void);
		/*************************************************************************//*!
				@brief			IME操作文字列の取得
				@param			None

				@return			IME操作文字列
		*//**************************************************************************/
		virtual LPString GetImeString(void);
		/*************************************************************************//*!
				@brief			入力文字列の取得
				@param			None

				@return			入力文字列
		*//**************************************************************************/
		virtual LPString GetInputString(void);
		/*************************************************************************//*!
				@brief			入力文字列とIME操作文字列の取得
				@param[out]		os			出力文字列

				@return			入力文字列とIME操作文字列の結合文字列
		*//**************************************************************************/
		virtual MofBool GetInputImeString(CString& os);
		/*************************************************************************//*!
				@brief			入力確定文字列の取得
				@param			None

				@return			入力確定文字列
		*//**************************************************************************/
		virtual LPString GetEnterString(void);
		/*************************************************************************//*!
				@brief			挿入位置の取得
				@param			None

				@return			挿入位置
		*//**************************************************************************/
		virtual MofS32 GetInsertPoint(void);
		
		/*************************************************************************//*!
				@brief			IME入力の取得
				@param			None

				@return			IME入力
		*//**************************************************************************/
		static CImeProc* GetImeInput(void);

		//クラス基本定義
		MOF_LIBRARYCLASS_NOTCOPY(CImeProc, MOF_IMEWINDOWPROCCLASS_ID);
	};

	typedef		CImeProc*		LPImeProc;

	#include	"ImeProc.inl"

}

#endif

//[EOF]