/*************************************************************************//*!
					
					@file	InputUtilities.h
					@brief	入力関連の汎用処理をまとめたスタティッククラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__INPUTUTILITIES__H__

#define		__INPUTUTILITIES__H__

//INCLUDE
#include	"../Input/Input.h"

namespace Mof {

	/*******************************//*!
	@brief	入力関連の汎用処理をまとめたスタティッククラス

			入力関連の汎用処理をまとめたスタティッククラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CInputUtilities {
	private:
		/*******************//*!
		入力
		*//********************/
		static LPInput				m_pInput;
	public:
		/*************************************************************************//*!
				@brief			キーボードキー入力状態判定<br>
								キー番号のキーのPush(このフレームで入力された)判定を行う
				@param[in]		n				キー番号

				@return			TRUE			入力あり<br>
								FALSE			入力なし
		*//**************************************************************************/
		static MofBool IsKeyPush(const MofU8 n);
		/*************************************************************************//*!
				@brief			キーボードキー入力状態判定<br>
								キー番号のキーのHold(このフレームで入力されている)判定を行う
				@param[in]		n				キー番号

				@return			TRUE			入力あり<br>
								FALSE			入力なし
		*//**************************************************************************/
		static MofBool IsKeyHold(const MofU8 n);
		/*************************************************************************//*!
				@brief			キーボードキー入力状態判定<br>
								キー番号のキーのPull(このフレームで放された)判定を行う
				@param[in]		n				キー番号

				@return			TRUE			入力あり<br>
								FALSE			入力なし
		*//**************************************************************************/
		static MofBool IsKeyPull(const MofU8 n);

		/*************************************************************************//*!
				@brief			マウスボタン入力状態判定<br>
								ボタン番号のボタンのPush(このフレームで入力された)判定を行う
				@param[in]		n				ボタン番号

				@return			TRUE			入力あり<br>
								FALSE			入力なし
		*//**************************************************************************/
		static MofBool IsMouseKeyPush(const MofU8 n);
		/*************************************************************************//*!
				@brief			マウスボタン入力状態判定<br>
								ボタン番号のボタンのHold(このフレームで入力されている)判定を行う
				@param[in]		n				ボタン番号

				@return			TRUE			入力あり<br>
								FALSE			入力なし
		*//**************************************************************************/
		static MofBool IsMouseKeyHold(const MofU8 n);
		/*************************************************************************//*!
				@brief			マウスボタン入力状態判定<br>
								ボタン番号のボタンのPull(このフレームで放された)判定を行う
				@param[in]		n				ボタン番号

				@return			TRUE			入力あり<br>
								FALSE			入力なし
		*//**************************************************************************/
		static MofBool IsMouseKeyPull(const MofU8 n);

		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			インプットインターフェイスを設定する
				@param[in]		pg				インプットインターフェイス

				@return			None
		*//**************************************************************************/
		static void SetInput(LPInput pg);
		/*************************************************************************//*!
				@brief			キー状態設定
				@param[in]		n				キー番号
				@param[in]		bState			キー状態
				
				@return			TRUE			設定成功<br>
								FALSE			設定失敗
		*//**************************************************************************/
		static MofBool SetKeyState(const MofU8 n,const MofBool bState);
		/*************************************************************************//*!
				@brief			タッチ情報設定<br>
								タッチ入力が有効な場合のみ処理を実行。
				@param[in]		act				タッチ動作フラグ
				@param[in]		Id				タッチID
				@param[in]		x				タッチX座標
				@param[in]		y				タッチY座標

				@return			インプットデバイス
		*//**************************************************************************/
		static MofBool SetTouchState(MofS32 act,MofS32 Id,MofFloat x,MofFloat y);
		
		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			インプットインターフェイスを取得する
				@param			None

				@return			インプットインターフェイス
		*//**************************************************************************/
		static LPInput GetInput(void);
		/*************************************************************************//*!
				@brief			マウス座標を二つのfloat型のデータとして取得する
				@param[out]		px			マウスＸ座標
				@param[out]		py			マウスＹ座標
				
				@return			TRUE		正常に取得することができた
								FALSE		読み込みエラー
		*//**************************************************************************/
		static MofBool GetMousePos(MofFloat& px,MofFloat& py);
		/*************************************************************************//*!
				@brief			マウス座標をVector2型のデータとして取得する
				@param[out]		v			Vector2
				
				@return			TRUE		正常に取得することができた
								FALSE		読み込みエラー
		*//**************************************************************************/
		static MofBool GetMousePos(Vector2& v);
		/*************************************************************************//*!
				@brief			マウスのホイール移動を取得する
				@param			None
				
				@return			ホイール移動量
		*//**************************************************************************/
		static MofFloat GetMouseWheelMove(void);
		/*************************************************************************//*!
				@brief			マウス移動を二つのfloat型のデータとして取得する
				@param[out]		px			マウスＸ移動量
				@param[out]		py			マウスＹ移動量
				
				@return			TRUE		正常に取得することができた
								FALSE		読み込みエラー
		*//**************************************************************************/
		static MofBool GetMouseMove(MofFloat& px,MofFloat& py);
		/*************************************************************************//*!
				@brief			マウス移動をVector3型のデータとして取得する<br>
								x,yにはカーソルの移動量がzにはホイールの移動量が入る
				@param[out]		v			Vector3
				
				@return			TRUE		正常に取得することができた
								FALSE		読み込みエラー
		*//**************************************************************************/
		static MofBool GetMouseMove(Vector3& v);
	private:
		//作成を禁止する
		CInputUtilities(){};
		CInputUtilities(const CInputUtilities& pObj){};
	};

	#include	"InputUtilities.inl"
}

#endif

//[EOF]