/*************************************************************************//*!
					
					@file	SoundBuffer.h
					@brief	各種サウンドバッファの処理を行う基底インターフェイス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__SOUNDBUFFER__H__

#define		__SOUNDBUFFER__H__

//INCLUDE
#include	"Sound.h"

namespace Mof {
	
	/*******************************//*!
	@brief	サウンドバッファ基底インターフェイス

			サウンドバッファの基底となるインターフェイス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API ISoundBuffer : public IMofNamedObject {
	protected:
	public:
		/*************************************************************************//*!
				@brief			サウンドの読み込み
				@param[in]		pName			ファイル名
				@param[in]		Flags			読み込みフラグ
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPCMofChar pName,const MofU32 Flags = 0) = 0;
		/*************************************************************************//*!
				@brief			サウンドの読み込み
				@param[in]		pName			名前
				@param[in]		pData			メモリアドレス
				@param[in]		Size			サイズ
				@param[in]		Flags			読み込みフラグ
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Load(LPCMofChar pName,LPMofVoid pData,MofU32 Size,const MofU32 Flags = 0) = 0;
		
		/*************************************************************************//*!
				@brief			サウンドの更新
				@param			None
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Update(void) = 0;

		/*************************************************************************//*!
				@brief			サウンドの再生
				@param			None
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Play(void) = 0;
		/*************************************************************************//*!
				@brief			サウンドの再生
				@param[out]		on				再生開始番号
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Play(MofU32& on) = 0;
		
		/*************************************************************************//*!
				@brief			サウンドの一時停止
				@param			None
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Pause(void) = 0;
		/*************************************************************************//*!
				@brief			サウンドの一時停止
				@param[in]		n				再生番号
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Pause(MofU32 n) = 0;
		/*************************************************************************//*!
				@brief			サウンドの再開
				@param			None
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Resume(void) = 0;
		/*************************************************************************//*!
				@brief			サウンドの再開
				@param[in]		n				再生番号
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Resume(MofU32 n) = 0;
		
		/*************************************************************************//*!
				@brief			サウンドの停止
				@param			None
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Stop(void) = 0;
		/*************************************************************************//*!
				@brief			サウンドの停止
				@param[in]		n				再生番号
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Stop(MofU32 n) = 0;
		
		//----------------------------------------------------------------------------
		////Is
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			ループフラグがONか判定
				@param			None

				@return			TRUE			ループ再生する<br>
								FALSE			ループしない
		*//**************************************************************************/
		virtual MofBool IsLoop(void) = 0;
		/*************************************************************************//*!
				@brief			再生中か判定
				@param			None

				@return			TRUE			再生している<br>
								FALSE			再生していない
		*//**************************************************************************/
		virtual MofBool IsPlay(void) = 0;
		/*************************************************************************//*!
				@brief			再生中か判定
				@param[in]		n				再生番号

				@return			TRUE			再生している<br>
								FALSE			再生していない
		*//**************************************************************************/
		virtual MofBool IsPlay(MofU32 n) = 0;
		
		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			ループフラグの設定
				@param[in]		bl			ループフラグ（TRUE:ループする、FALSE:ループしない）
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool SetLoop(MofBool bl) = 0;
		/*************************************************************************//*!
				@brief			再生音量設定
				@param[in]		Vol			音量(0.0(無音)〜1.0(通常))
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool SetVolume(MofFloat Vol) = 0;
		/*************************************************************************//*!
				@brief			再生音量設定
				@param[in]		Vol			音量(0.0(無音)〜1.0(通常))
				@param[in]		n			再生番号
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool SetVolume(MofFloat Vol,MofU32 n) = 0;
		/*************************************************************************//*!
				@brief			再生ピッチ設定
				@param[in]		Pitch		ピッチ
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool SetPitch(MofFloat Pitch) = 0;
		/*************************************************************************//*!
				@brief			同時再生数の設定
				@param[in]		cnt			数
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool SetBufferCount(MofU32 cnt) = 0;

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			サウンドバッファ取得
				@param			None

				@return			サウンドバッファ
		*//**************************************************************************/
		virtual MofSoundBuffer GetBuffer(void) = 0;
		/*************************************************************************//*!
				@brief			音ファイルの時間取得
				@param			None
				
				@return			音ファイルの時間
		*//**************************************************************************/
		virtual MofFloat GetTime(void) = 0;
		/*************************************************************************//*!
				@brief			音ファイルの時間取得
				@param			None
				
				@return			音ファイルの時間
		*//**************************************************************************/
		virtual MofFloat GetPlayTime(void) = 0;
		/*************************************************************************//*!
				@brief			再生音量取得
				@param			None
				
				@return			音量(0.0(無音)〜1.0(通常))
		*//**************************************************************************/
		virtual MofFloat GetVolume(void) = 0;
		/*************************************************************************//*!
				@brief			再生ピッチ取得
				@param			None
				
				@return			ピッチ
		*//**************************************************************************/
		virtual MofFloat GetPitch(void) = 0;
	};

	//ポインタ置き換え
	typedef ISoundBuffer*			LPSoundBuffer;
	typedef CDynamicArray< LPSoundBuffer >		CSoundBufferArray,*LPSoundBufferArray;
}

#endif

//[EOF]