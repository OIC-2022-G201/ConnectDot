/*************************************************************************//*!
					
					@file	SoundBufferBase.h
					@brief	各種サウンドバッファの処理を行う基底クラス。

															@author	CDW
															@date	2014.05.14
*//**************************************************************************/

//ONCE
#ifndef		__SOUNDBUFFERBASE__H__

#define		__SOUNDBUFFERBASE__H__

//INCLUDE
#include	"SoundBuffer.h"

namespace Mof {
	
	/*******************************//*!
	@brief	XAudio2でのサウンドバッファクラス

			XAudio2でのサウンドバッファクラス。

	@author	CDW
	*//********************************/
	class MOFLIBRARY_API CSoundBufferBase : public ISoundBuffer, public IMofRefCounter {
	protected:
		/*******************//*!
		ファイル名
		*//********************/
		CString						m_Name;
		/*******************//*!
		サウンド用データバッファ
		*//********************/
		LPMofU8						m_pBufferData[2];
		/*******************//*!
		同時再生数
		*//********************/
		MofU32						m_BufferCount;
		/*******************//*!
		サウンド用データバッファサイズ
		*//********************/
		MofU32						m_BufferSize;
		/*******************//*!
		サウンドループフラグ
		*//********************/
		MofBool						m_bLoop;
		/*******************//*!
		音量
		*//********************/
		MofFloat					m_Volume;
		/*******************//*!
		ピッチ
		*//********************/
		MofFloat					m_Pitch;
		/*******************//*!
		音ファイルの時間
		*//********************/
		MofFloat					m_Time;
		/*******************//*!
		サンプル
		*//********************/
		MofFloat					m_SamplesPerSec;
	public:
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		CSoundBufferBase();
		/*************************************************************************//*!
				@brief			コンストラクタ
				@param[in]		cnt				バッファ数

				@return			None
		*//**************************************************************************/
		CSoundBufferBase(const MofU32 cnt);
		/*************************************************************************//*!
				@brief			コピーコンストラクタ
				@param[in]		pObj			コピーバッファ

				@return			None
		*//**************************************************************************/
		CSoundBufferBase(const CSoundBufferBase& pObj);
		/*************************************************************************//*!
				@brief			デストラクタ
				@param			None

				@return			None
		*//**************************************************************************/
		virtual ~CSoundBufferBase();
		
		/*************************************************************************//*!
				@brief			サウンドの更新
				@param			None
				
				@return			TRUE			成功<br>
								それ以外		失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool Update(void);

		/*************************************************************************//*!
				@brief			解放
				@param[in]		pData			解放追加データ

				@return			TRUE			正常終了<br>
								それ以外		解放エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool Release(LPMofVoid pData = NULL);
		
		//----------------------------------------------------------------------------
		////Is
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			ループフラグがONか判定
				@param			None

				@return			TRUE			ループ再生する<br>
								FALSE			ループしない
		*//**************************************************************************/
		virtual MofBool IsLoop(void);
		
		//----------------------------------------------------------------------------
		////Set
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前設定
				@param[in]		pName			設定する名前
				
				@return			TRUE			正常終了<br>
								それ以外		設定エラー、エラーコードを返す。
		*//**************************************************************************/
		virtual MofBool SetName(LPCMofChar pName);
		/*************************************************************************//*!
				@brief			ループフラグの設定
				@param[in]		bl			ループフラグ（TRUE:ループする、FALSE:ループしない）
				
				@return			TRUE		成功<br>
								それ以外	失敗、エラーコードが戻り値となる
		*//**************************************************************************/
		virtual MofBool SetLoop(MofBool bl);

		//----------------------------------------------------------------------------
		////Get
		//----------------------------------------------------------------------------
		/*************************************************************************//*!
				@brief			名前取得
				@param			None

				@return			名前の取得
		*//**************************************************************************/
		virtual LPString GetName(void);
		/*************************************************************************//*!
				@brief			再生音量取得
				@param			None
				
				@return			音量(0.0(無音)〜1.0(通常))
		*//**************************************************************************/
		virtual MofFloat GetVolume(void);
		/*************************************************************************//*!
				@brief			再生ピッチ取得
				@param			None
				
				@return			ピッチ
		*//**************************************************************************/
		virtual MofFloat GetPitch(void);
		/*************************************************************************//*!
				@brief			音ファイルの時間取得
				@param			None
				
				@return			音ファイルの時間
		*//**************************************************************************/
		virtual MofFloat GetTime(void);
	};

	#include	"SoundBufferBase.inl"
}

#endif

//[EOF]